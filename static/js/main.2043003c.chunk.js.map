{"version":3,"sources":["components/OperacaoTable.js","components/NaviosTable.js","components/LocalizacaoGG.js","components/LocalizacaoGGMM.js","components/LocalizacaoGGMMSS.js","components/DadosTable.js","App.js","reportWebVitals.js","index.js"],"names":["OperacaoTable","_ref","dadosOperacao","config","handleOperacaoChange","Array","isArray","React","createElement","className","map","valor","index","key","value","onChange","e","item","idx","style","color","NaviosTable","dadosFiltrados","adicionarAoDadostable","handleFiltroChange","length","cabecalho","dados","slice","col","_","type","placeholder","linha","i","onClick","celula","j","LocalizacaoGGLatitude","disabled","numeric","hemisferio","parts","split","display","alignItems","InputMask","mask","newNumeric","target","inputProps","Object","assign","width","newHemi","marginLeft","LocalizacaoGGLongitude","_ref2","LocalizacaoGGMMLatitude","join","LocalizacaoGGMMLongitude","LocalizacaoGGMMSSLatitude","LocalizacaoGGMMSSLongitude","parseLocation","currentFormat","isLatitude","trim","parseInt","parseFloat","replace","degDigits","formatLocation","totalMinutes","targetFormat","degrees","Math","floor","minutesDecimal","String","padStart","toFixed","degStr","min","sec","round","DadosTable","dadosSelecionados","handleCellEdit","updateCellValue","updateRowDisabled","removerLinha","activeLocationFormat","setActiveLocationFormat","setDadosSelecionados","colSpan","toggleModel","newFormat","updatedRows","row","totalMinutesLat","latitude","totalMinutesLon","longitude","newLat","newLon","dado","rowIndex","nomeEmbarcacao","numRegisto","numMatricula","tipoEmbarcacao","nacionalidade","nomeMestre","ilha","licenca","data","hora","tipoDeTask","situacao","tipoInfracao","whiteSpace","wordBreak","rows","medidasTomadas","outrasAgencias","observacoes","App","setDadosOperacao","useState","saved","localStorage","getItem","JSON","parse","dadosNavios","setDadosNavios","filtros","setFiltros","loading","setLoading","error","setError","setConfig","nacionalidadeEntidade","operacoes","entidades","tiposEntidade","situacoes","tiposEmbarcacao","useEffect","Promise","all","async","response","axios","get","filter","Boolean","console","fetchConfig","linhasNavios","fetchNavios","then","setItem","stringify","every","filtro","toLowerCase","includes","convertLocation","hemis","toUpperCase","numericPart","minutes","result","novoValor","prev","novosDados","localizacaoGG","localizacaoGGMM","localizacaoGGMMSS","Date","toISOString","substring","toLocaleTimeString","hour","minute","hour12","colunaIndex","cellKey","innerText","field","status","enviarDados","alert","operacaoData","operacao","entidade","tipoOperacao","nacionalidadeOperacao","combinedData","lat","lon","worksheet","XLSX","aoa_to_sheet","workbook","book_new","book_append_sheet","marginTop","padding","resetarDados","window","confirm","clear","location","reload","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2043003c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst OperacaoTable = ({ dadosOperacao, config, handleOperacaoChange }) => {\n  if (!Array.isArray(dadosOperacao) || !Array.isArray(config)) {\n    return <p>Erro: dadosOperacao ou config não são arrays válidos.</p>;\n  }\n\n  return (\n    <div>\n      <div className=\"operacaotable\">\n      <div className=\"table-wrapper small-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Operação</th>\n              <th>Entidade</th>\n              <th>Tipo</th>\n              <th>Nacionalidade</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              {dadosOperacao.map((valor, index) => (\n                <td key={index}>\n                  {Array.isArray(config[index]) ? (\n                    <select value={valor} onChange={(e) => handleOperacaoChange(e, index)}>\n                      {config[index].map((item, idx) => (\n                        <option key={idx} value={item}>\n                          {item}\n                        </option>\n                      ))}\n                    </select>\n                  ) : (\n                    <p style={{ color: \"red\" }}>Erro: Configuração inválida</p>\n                  )}\n                </td>\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default OperacaoTable;\n","import React from \"react\";\n\nconst NaviosTable = ({ dadosFiltrados = [], adicionarAoDadostable, handleFiltroChange }) => {\n  if (!dadosFiltrados || dadosFiltrados.length === 0) {\n    return <p>Lista de navios sendo carregada, aguarde...por favor!!!.</p>;\n  }\n\n  // A primeira linha é o cabeçalho e as demais são os dados\n  const cabecalho = dadosFiltrados[0];\n  const dados = dadosFiltrados.slice(1);\n\n  return (\n    <div className=\"naviostable\">\n      <div className=\"table-wrapper\">\n\n        <table>\n          <thead>\n            {/* Linha de cabeçalho com os nomes das colunas */}\n            <tr>\n              <th>Ação</th>\n              {cabecalho.map((col, index) => (\n                <th key={index}>{col}</th>\n              ))}\n            </tr>\n            {/* Linha de filtros */}\n            <tr>\n              <th></th>\n              {cabecalho.map((_, index) => (\n                <th key={index}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Filtrar\"\n                    onChange={(e) => handleFiltroChange(e, index)}\n                  />\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {dados.map((linha, i) => (\n              <tr key={i}>\n                <td>\n                  <button onClick={() => adicionarAoDadostable(linha)}>\n                    Escolher\n                  </button>\n                </td>\n                {linha.map((celula, j) => (\n                  <td key={j}>{celula}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default NaviosTable;\n","import React from \"react\";\nimport InputMask from \"react-input-mask\";\n\nexport const LocalizacaoGGLatitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99,99 H\" (H = N ou S)\n  let numeric = \"\";\n  let hemisferio = \"N\";\n  if (value) {\n    const parts = value.split(\" \");\n    numeric = parts[0] || \"\";\n    hemisferio = parts[1] || \"N\";\n  }\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value;\n    onChange({ target: { value: newNumeric + \" \" + hemisferio } });\n  };\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: numeric + \" \" + newHemi } });\n  };\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"60px\" }} />}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"N\">N</option>\n        <option value=\"S\">S</option>\n      </select>\n    </div>\n  );\n};\n\nexport const LocalizacaoGGLongitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99,99 H\" (H = E ou W)\n  let numeric = \"\";\n  let hemisferio = \"W\";\n  if (value) {\n    const parts = value.split(\" \");\n    numeric = parts[0] || \"\";\n    hemisferio = parts[1] || \"W\";\n  }\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value;\n    onChange({ target: { value: newNumeric + \" \" + hemisferio } });\n  };\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: numeric + \" \" + newHemi } });\n  };\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"60px\" }} />}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"E\">E</option>\n        <option value=\"W\">W</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\nimport InputMask from \"react-input-mask\";\n\nexport const LocalizacaoGGMMLatitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99,99 H\" (H = N ou S)\n  let numeric = \"\";\n  let hemisferio = \"N\";\n  if (value) {\n    const parts = value.split(\" \");\n    if (parts.length >= 3) {\n      numeric = parts[0] + \" \" + parts[1];\n      hemisferio = parts[2];\n    } else {\n      numeric = parts.join(\" \");\n    }\n  }\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value;\n    onChange({ target: { value: newNumeric + \" \" + hemisferio } });\n  };\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: numeric + \" \" + newHemi } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99 99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"80px\" }} />}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"N\">N</option>\n        <option value=\"S\">S</option>\n      </select>\n    </div>\n  );\n};\n\nexport const LocalizacaoGGMMLongitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99,99 H\" (H = E ou W)\n  let numeric = \"\";\n  let hemisferio = \"W\";\n  if (value) {\n    const parts = value.split(\" \");\n    if (parts.length >= 3) {\n      numeric = parts[0] + \" \" + parts[1];\n      hemisferio = parts[2];\n    } else {\n      numeric = parts.join(\" \");\n    }\n  }\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value;\n    onChange({ target: { value: newNumeric + \" \" + hemisferio } });\n  };\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: numeric + \" \" + newHemi } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99 99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"80px\" }} />}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"E\">E</option>\n        <option value=\"W\">W</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\nimport InputMask from \"react-input-mask\";\n\nexport const LocalizacaoGGMMSSLatitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99 99,99 H\" (H = N ou S)\n  let numeric = \"\";\n  let hemisferio = \"N\";\n  if (value) {\n    const parts = value.split(\" \");\n    if (parts.length >= 4) {\n      numeric = parts[0] + \" \" + parts[1] + \" \" + parts[2];\n      hemisferio = parts[3];\n    } else {\n      numeric = parts.join(\" \");\n    }\n  }\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value;\n    onChange({ target: { value: newNumeric + \" \" + hemisferio } });\n  };\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: numeric + \" \" + newHemi } });\n  };\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask \n        mask=\"99 99 99,99\" \n        value={numeric} \n        onChange={handleNumericChange} \n        disabled={disabled}\n      >\n        {(inputProps) => (\n          <input {...inputProps} type=\"text\" style={{ width: \"100px\" }} />\n        )}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"N\">N</option>\n        <option value=\"S\">S</option>\n      </select>\n    </div>\n  );\n};\n\nexport const LocalizacaoGGMMSSLongitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99 99,99 H\" (H = E ou W)\n  let numeric = \"\";\n  let hemisferio = \"W\";\n  if (value) {\n    const parts = value.split(\" \");\n    if (parts.length >= 4) {\n      numeric = parts[0] + \" \" + parts[1] + \" \" + parts[2];\n      hemisferio = parts[3];\n    } else {\n      numeric = parts.join(\" \");\n    }\n  }\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value;\n    onChange({ target: { value: newNumeric + \" \" + hemisferio } });\n  };\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: numeric + \" \" + newHemi } });\n  };\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask \n        mask=\"99 99 99,99\" \n        value={numeric} \n        onChange={handleNumericChange} \n        disabled={disabled}\n      >\n        {(inputProps) => (\n          <input {...inputProps} type=\"text\" style={{ width: \"100px\" }} />\n        )}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"E\">E</option>\n        <option value=\"W\">W</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { LocalizacaoGGLatitude, LocalizacaoGGLongitude } from \"./LocalizacaoGG\";\nimport { LocalizacaoGGMMLatitude, LocalizacaoGGMMLongitude } from \"./LocalizacaoGGMM\";\nimport { LocalizacaoGGMMSSLatitude, LocalizacaoGGMMSSLongitude } from \"./LocalizacaoGGMMSS\";\n\n// Função para converter o valor de localização em um número (total de minutos)\nconst parseLocation = (value, currentFormat, isLatitude) => {\n  if (!value) return 0;\n  value = value.trim();\n  if (currentFormat === \"GG\") {\n    // Formato: \"dd,mm.xx\" (ex: \"12,56.98\")\n    const parts = value.split(\",\");\n    const degrees = parseInt(parts[0], 10);\n    // Substituir vírgula decimal se necessário\n    const minutes = parseFloat(parts[1].replace(\",\", \".\"));\n    return degrees * 60 + minutes;\n  } else if (currentFormat === \"GGMM\") {\n    // Formato: \"ddmm,mm\" (ex: \"1256,98\")\n    const degDigits = isLatitude ? 2 : 3;\n    const degrees = parseInt(value.slice(0, degDigits), 10);\n    const minutes = parseFloat(value.slice(degDigits).replace(\",\", \".\"));\n    return degrees * 60 + minutes;\n  } else if (currentFormat === \"GGMMSS\") {\n    // Formato: \"ddmmss,00\" (ex: \"125659,00\")\n    const degDigits = isLatitude ? 2 : 3;\n    const degrees = parseInt(value.slice(0, degDigits), 10);\n    const minutes = parseInt(value.slice(degDigits, degDigits + 2), 10);\n    const seconds = parseInt(value.slice(degDigits + 2, degDigits + 4), 10);\n    return degrees * 60 + minutes + seconds / 60;\n  }\n  return 0;\n};\n\n// Função para formatar um total de minutos para o formato de destino\nconst formatLocation = (totalMinutes, targetFormat, isLatitude) => {\n  const degrees = Math.floor(totalMinutes / 60);\n  const minutesDecimal = totalMinutes - degrees * 60;\n  if (targetFormat === \"GG\") {\n    // Formato \"GG,GG\": graus com 2 (ou 3) dígitos, vírgula, minutos decimais com 2 casas\n    const degStr = isLatitude ? String(degrees).padStart(2, \"0\") : String(degrees).padStart(3, \"0\");\n    const minStr = minutesDecimal.toFixed(2).replace(\".\", \",\");\n    return `${degStr},${minStr}`;\n  } else if (targetFormat === \"GGMM\") {\n    // Formato \"GGMM,MM\": concatena graus e minutos decimais, sem separador\n    const degStr = isLatitude ? String(degrees).padStart(2, \"0\") : String(degrees).padStart(3, \"0\");\n    const minStr = minutesDecimal.toFixed(2).replace(\".\", \",\");\n    return `${degStr}${minStr}`;\n  } else if (targetFormat === \"GGMMSS\") {\n    // Formato \"GGMMSS,00\": graus, minutos inteiros e segundos inteiros (arredondados), com \",00\"\n    const degStr = isLatitude ? String(degrees).padStart(2, \"0\") : String(degrees).padStart(3, \"0\");\n    const min = Math.floor(minutesDecimal);\n    const sec = Math.round((minutesDecimal - min) * 60);\n    const minStr = String(min).padStart(2, \"0\");\n    const secStr = String(sec).padStart(2, \"0\");\n    return `${degStr}${minStr}${secStr},00`;\n  }\n  return \"\";\n};\n\nconst DadosTable = ({\n  dadosSelecionados,\n  handleCellEdit,\n  updateCellValue,\n  updateRowDisabled,\n  removerLinha,\n  activeLocationFormat,       // \"GG\", \"GGMM\" ou \"GGMMSS\"\n  setActiveLocationFormat,    // Função para alterar o formato ativo\n  setDadosSelecionados,       // Função para atualizar todos os registros\n}) => {\n  if (!dadosSelecionados.length)\n    return (\n      <p>\n        Nenhum navio selecionado. Use o filtro para buscar por embarcação e clique \"ESCOLHER\" para inserir a Embarcação!\n      </p>\n    );\n\n  // Função para alternar o modelo de posição e converter os valores existentes\n  const toggleModel = () => {\n    let newFormat;\n    if (activeLocationFormat === \"GG\") {\n      newFormat = \"GGMM\";\n    } else if (activeLocationFormat === \"GGMM\") {\n      newFormat = \"GGMMSS\";\n    } else {\n      newFormat = \"GG\";\n    }\n    // Converter cada registro: se houver valor em latitude e longitude, converte para o novo formato\n    const updatedRows = dadosSelecionados.map((row) => {\n      const totalMinutesLat = parseLocation(row.latitude, activeLocationFormat, true);\n      const totalMinutesLon = parseLocation(row.longitude, activeLocationFormat, false);\n      const newLat = formatLocation(totalMinutesLat, newFormat, true);\n      const newLon = formatLocation(totalMinutesLon, newFormat, false);\n      return { ...row, latitude: newLat, longitude: newLon };\n    });\n    setDadosSelecionados(updatedRows);\n    setActiveLocationFormat(newFormat);\n  };\n\n  return (\n    <div className=\"dadostable\">\n      <div className=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              {/* Colunas fixas */}\n              <th>Nome da Embarcação</th>\n              <th>Nº Registo/IMO</th>\n              <th>Nº Matrícula/MMSI</th>\n              <th>Tipo de Embarcacao</th>\n              <th>Nacionalidade</th>\n              <th>Nome do Mestre</th>\n              <th>Ilha</th>\n              <th>Licença</th>\n              <th>Data</th>\n              <th>Hora</th>\n              <th>Tipo de Task</th>\n              {/* Botão para alternar modelo de posição */}\n              <th colSpan=\"2\">\n                <button onClick={toggleModel}>\n                  ESCOLHER MODELO POSIÇÕES: {activeLocationFormat}\n                </button>\n                <br />\n                Latitude / Longitude\n              </th>\n              <th>Situação</th>\n              <th>Tipo de Infração</th>\n              <th>Medidas Tomadas</th>\n              <th>Outras Agências</th>\n              <th>OBS</th>\n              <th>Ações</th>\n            </tr>\n          </thead>\n          <tbody>\n            {dadosSelecionados.map((dado, rowIndex) => (\n              <tr key={rowIndex}>\n                {/* Colunas fixas */}\n                <td>{dado.nomeEmbarcacao}</td>\n                <td>{dado.numRegisto}</td>\n                <td>{dado.numMatricula}</td>\n                <td>{dado.tipoEmbarcacao}</td>\n                <td>{dado.nacionalidade}</td>\n                <td>{dado.nomeMestre}</td>\n                <td>{dado.ilha}</td>\n                <td>{dado.licenca}</td>\n                <td>\n                  <input\n                    type=\"date\"\n                    value={dado.data}\n                    onChange={(e) => updateCellValue(rowIndex, \"data\", e.target.value)}\n                    disabled={dado.disabled}\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"time\"\n                    value={dado.hora}\n                    onChange={(e) => updateCellValue(rowIndex, \"hora\", e.target.value)}\n                    disabled={dado.disabled}\n                  />\n                </td>\n                <td>\n                  {dado.disabled ? (\n                    <span>{dado.tipoDeTask}</span>\n                  ) : (\n                    <select\n                      value={dado.tipoDeTask}\n                      onChange={(e) => updateCellValue(rowIndex, \"tipoDeTask\", e.target.value)}\n                      disabled={dado.disabled}\n                    >\n                      <option value=\"\">Selecione...</option>\n                      <option value=\"Abordado\">Abordado</option>\n                      <option value=\"Avistado\">Avistado</option>\n                      <option value=\"Investigado\">Investigado</option>\n                    </select>\n                  )}\n                </td>\n                {/* Coluna para Latitude */}\n                <td>\n                  {activeLocationFormat === \"GG\" ? (\n                    <LocalizacaoGGLatitude\n                      value={dado.latitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"latitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMM\" ? (\n                    <LocalizacaoGGMMLatitude\n                      value={dado.latitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"latitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMMSS\" ? (\n                    <LocalizacaoGGMMSSLatitude\n                      value={dado.latitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"latitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : (\n                    <input type=\"text\" value=\"\" disabled placeholder=\"Inativo\" style={{ width: \"80px\" }} />\n                  )}\n                </td>\n                {/* Coluna para Longitude */}\n                <td>\n                  {activeLocationFormat === \"GG\" ? (\n                    <LocalizacaoGGLongitude\n                      value={dado.longitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"longitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMM\" ? (\n                    <LocalizacaoGGMMLongitude\n                      value={dado.longitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"longitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMMSS\" ? (\n                    <LocalizacaoGGMMSSLongitude\n                      value={dado.longitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"longitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : (\n                    <input type=\"text\" value=\"\" disabled placeholder=\"Inativo\" style={{ width: \"80px\" }} />\n                  )}\n                </td>\n                {/* Dropdown para Situação */}\n                <td>\n                  {dado.disabled ? (\n                    <span>{dado.situacao}</span>\n                  ) : (\n                    <select\n                      value={dado.situacao}\n                      onChange={(e) => updateCellValue(rowIndex, \"situacao\", e.target.value)}\n                      disabled={dado.disabled}\n                    >\n                      <option value=\"\">Selecione...</option>\n                      <option value=\"Irregular\">Irregular</option>\n                      <option value=\"Ilegal\">Ilegal</option>\n                      <option value=\"Legal\">Legal</option>\n                    </select>\n                  )}\n                </td>\n                {/* Textareas para campos longos */}\n                <td>\n                  <textarea\n                    value={dado.tipoInfracao}\n                    onChange={(e) => updateCellValue(rowIndex, \"tipoInfracao\", e.target.value)}\n                    disabled={dado.disabled}\n                    style={{ width: \"100px\", whiteSpace: \"pre-wrap\", wordBreak: \"break-all\" }}\n                    rows={3}\n                  />\n                </td>\n                <td>\n                  <textarea\n                    value={dado.medidasTomadas}\n                    onChange={(e) => updateCellValue(rowIndex, \"medidasTomadas\", e.target.value)}\n                    disabled={dado.disabled}\n                    style={{ width: \"100px\", whiteSpace: \"pre-wrap\", wordBreak: \"break-all\" }}\n                    rows={3}\n                  />\n                </td>\n                <td>\n                  <textarea\n                    value={dado.outrasAgencias}\n                    onChange={(e) => updateCellValue(rowIndex, \"outrasAgencias\", e.target.value)}\n                    disabled={dado.disabled}\n                    style={{ width: \"100px\", whiteSpace: \"pre-wrap\", wordBreak: \"break-all\" }}\n                    rows={3}\n                  />\n                </td>\n                <td>\n                  <textarea\n                    value={dado.observacoes}\n                    onChange={(e) => updateCellValue(rowIndex, \"observacoes\", e.target.value)}\n                    disabled={dado.disabled}\n                    style={{ width: \"100px\", whiteSpace: \"pre-wrap\", wordBreak: \"break-all\" }}\n                    rows={3}\n                  />\n                </td>\n                {/* Ações */}\n                <td>\n                  <button onClick={() => updateRowDisabled(rowIndex, !dado.disabled)}>\n                    {dado.disabled ? \"Editar\" : \"Pronto\"}\n                  </button>\n                  <button onClick={() => removerLinha(rowIndex)}>Excluir</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default DadosTable;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport OperacaoTable from \"./components/OperacaoTable\";\nimport NaviosTable from \"./components/NaviosTable\";\nimport DadosTable from \"./components/DadosTable\";\nimport \"./App.css\";\nimport * as XLSX from \"xlsx\"; // Para exportação\n\nconst GOOGLE_SHEET_URL =\n  \"https://docs.google.com/spreadsheets/d/e/2PACX-1vR6IEKVLswVSPSlD5qKBtbTqwj7ciZOhr40a84inuVTeeXIyC8KueX8IaVW2tILpaVxp5p2OsoxBi6g/pub?output=csv\";\nconst GOOGLE_SHEET_CONFIG_URL =\n  \"https://docs.google.com/spreadsheets/d/e/2PACX-1vQmY3QHsDgxr-YD_5pvQla3QqEv54ek8sqB1HolsYgfOaFpTT7huZI-E7EVtt_TV0hD0Jq52j46y4vn/pub?gid=481503026&single=true&output=csv\";\n\nfunction App() {\n  // Estados com persistência via localStorage\n  const [dadosOperacao, setDadosOperacao] = useState(() => {\n    const saved = localStorage.getItem(\"dadosOperacao\");\n    return saved ? JSON.parse(saved) : [\"\", \"\", \"\", \"\"];\n  });\n  const [dadosSelecionados, setDadosSelecionados] = useState(() => {\n    const saved = localStorage.getItem(\"dadosSelecionados\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [dadosNavios, setDadosNavios] = useState([]);\n  const [filtros, setFiltros] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [config, setConfig] = useState({\n    nacionalidadeEntidade: [],\n    operacoes: [],\n    entidades: [],\n    tiposEntidade: [],\n    situacoes: [],\n    tiposEmbarcacao: [],\n  });\n\n  // Estado para formato de localização ativo (\"GG\", \"GGMM\" ou \"GGMMSS\")\n  const [activeLocationFormat, setActiveLocationFormat] = useState(\"GG\");\n\n  useEffect(() => {\n    async function fetchConfig() {\n      try {\n        const response = await axios.get(GOOGLE_SHEET_CONFIG_URL);\n        const linhas = response.data.split(\"\\n\").map((linha) => linha.split(\",\"));\n        const dados = linhas.slice(1); // Remove o cabeçalho\n        setConfig({\n          nacionalidadeEntidade: dados.map((row) => row[0]).filter(Boolean),\n          operacoes: dados.map((row) => row[2]).filter(Boolean),\n          entidades: dados.map((row) => row[4]).filter(Boolean),\n          tiposEntidade: dados.map((row) => row[6]).filter(Boolean),\n          situacoes: dados.map((row) => row[8]).filter(Boolean),\n          tiposEmbarcacao: dados.map((row) => row[10]).filter(Boolean),\n        });\n      } catch (error) {\n        console.error(\"Erro ao buscar configuração:\", error);\n        setError(\"Falha ao carregar configurações.\");\n      }\n    }\n    async function fetchNavios() {\n      try {\n        const response = await axios.get(GOOGLE_SHEET_URL);\n        const linhasNavios = response.data.split(\"\\n\").map((linha) => linha.split(\",\"));\n        setDadosNavios(linhasNavios);\n      } catch (error) {\n        console.error(\"Erro ao buscar dados dos navios:\", error);\n        setError(\"Falha ao carregar dados dos navios.\");\n      }\n    }\n    Promise.all([fetchConfig(), fetchNavios()]).then(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"dadosOperacao\", JSON.stringify(dadosOperacao));\n  }, [dadosOperacao]);\n  useEffect(() => {\n    localStorage.setItem(\"dadosSelecionados\", JSON.stringify(dadosSelecionados));\n  }, [dadosSelecionados]);\n\n  const handleFiltroChange = (e, colunaIndex) => {\n    const valor = e.target.value;\n    setFiltros((prev) => ({ ...prev, [colunaIndex]: valor }));\n  };\n\n  const dadosFiltrados = dadosNavios.filter((linha, i) => {\n    if (i === 0) return true; // Cabeçalho permanece\n    return linha.every((celula, j) => {\n      const filtro = filtros[j];\n      if (!filtro) return true;\n      const valorCelula = celula ? String(celula).toLowerCase() : \"\";\n      return valorCelula.includes(filtro.toLowerCase());\n    });\n  });\n\n  const adicionarAoDadostable = (linha) => {\n    if (\n      linha[0] &&\n      linha[0].trim().toLowerCase() === \"nome da embarcação\".toLowerCase()\n    ) {\n      return;\n    }\n    setDadosSelecionados((prev) => [\n      ...prev,\n      {\n        nomeEmbarcacao: linha[0],\n        tipoDeTask: \"\",\n        numRegisto: linha[1],\n        numMatricula: linha[2],\n        tipoEmbarcacao: linha[3],\n        nacionalidade: linha[4],\n        nomeMestre: linha[5],\n        ilha: linha[6],\n        licenca: linha[7],\n        // Inicialmente, os campos de localização ficam vazios.\n        localizacaoGG: \"\",\n        localizacaoGGMM: \"\",\n        localizacaoGGMMSS: \"\",\n        // Utilizamos os campos latitude e longitude para a entrada do usuário.\n        latitude: \"\",\n        longitude: \"\",\n        situacao: \"\",\n        tipoInfracao: \"\",\n        medidasTomadas: \"\",\n        outrasAgencias: \"\",\n        observacoes: \"\",\n        disabled: false,\n        data: new Date().toISOString().substring(0, 10),\n        hora: new Date().toLocaleTimeString(\"pt-PT\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false,\n        }),\n      },\n    ]);\n  };\n\n  const handleCellEdit = (e, rowIndex, cellKey) => {\n    const novoValor = e.target.innerText;\n    setDadosSelecionados((prev) => {\n      const novosDados = [...prev];\n      novosDados[rowIndex][cellKey] = novoValor;\n      return novosDados;\n    });\n  };\n\n  const updateCellValue = (rowIndex, field, value) => {\n    setDadosSelecionados((prev) => {\n      const novosDados = [...prev];\n      novosDados[rowIndex][field] = value;\n      return novosDados;\n    });\n  };\n\n  const updateRowDisabled = (rowIndex, status) => {\n    setDadosSelecionados((prev) => {\n      const novosDados = [...prev];\n      novosDados[rowIndex].disabled = status;\n      return novosDados;\n    });\n  };\n\n  const removerLinha = (rowIndex) => {\n    setDadosSelecionados((prev) =>\n      prev.filter((_, index) => index !== rowIndex)\n    );\n  };\n\n  const resetarDados = () => {\n    if (\n      window.confirm(\"Tem certeza que deseja resetar os dados e começar do zero?\")\n    ) {\n      localStorage.clear();\n      window.location.reload();\n    }\n  };\n\n// Função de conversão: recebe o valor da localização (ex.: \"12,34 N\" ou \"12 34,56 N\")\n// e retorna o formato (-)ggmm,mm (para latitude) ou (-)gggmm,mm (para longitude)\nconst convertLocation = (value, isLatitude) => {\n  if (!value) return \"\";\n  const trimmed = value.trim();\n  const parts = trimmed.split(\" \");\n  const hemis = parts[parts.length - 1].toUpperCase();\n  let numericPart = parts.slice(0, parts.length - 1).join(\"\");\n  numericPart = numericPart.replace(\",\", \"\");\n  let degrees = \"\";\n  let minutes = \"\";\n  if (isLatitude) {\n    // Para latitude: 2 dígitos para graus, 2 para minutos\n    degrees = numericPart.slice(0, 2);\n    minutes = numericPart.slice(2, 4);\n  } else {\n    // Para longitude: 3 dígitos para graus, 2 para minutos\n    degrees = numericPart.slice(0, 3);\n    minutes = numericPart.slice(3, 5);\n  }\n  if (!degrees || !minutes) return value;\n  let result = degrees + minutes; // ex: \"1234\" para latitude ou \"12345\" para longitude\n  result = result.slice(0, result.length - 2) + \",\" + result.slice(result.length - 2);\n  if (isLatitude && hemis === \"S\") result = \"-\" + result;\n  if (!isLatitude && hemis === \"W\") result = \"-\" + result;\n  return result;\n};\n\nconst enviarDados = () => {\n  // Verifica se os dados de operação foram alterados (não estão vazios)\n  if (dadosOperacao.every(field => field.trim() === \"\")) {\n    alert(\"Por favor, altere os dados de operação antes de enviar.\");\n    return;\n  }\n  \n  // Verifica se todas as linhas estão no estado 'Pronto' (disabled === true)\n  const notReadyRows = dadosSelecionados.filter(row => !row.disabled);\n  if (notReadyRows.length > 0) {\n    alert(\"Todas as linhas devem estar no estado 'Pronto' antes de enviar.\");\n    return;\n  }\n  \n  // Dados de operação (4 elementos)\n  const operacaoData = {\n    operacao: dadosOperacao[0] || \"\",\n    entidade: dadosOperacao[1] || \"\",\n    tipoOperacao: dadosOperacao[2] || \"\",\n    nacionalidadeOperacao: dadosOperacao[3] || \"\",\n  };\n\n  // Definindo os cabeçalhos para o Excel (22 colunas)\n  const headers = [\n    \"Operação\",\n    \"Entidade\",\n    \"Tipo\",\n    \"Nacionalidade\",\n    \"Nome da Embarcação\",\n    \"Nº Registo/IMO\",\n    \"Nº Matrícula/MMSI\",\n    \"Tipo de Embarcacao\",\n    \"Nacionalidade\",\n    \"Nome do Mestre\",\n    \"Ilha\",\n    \"Licença\",\n    \"Data\",\n    \"Hora\",\n    \"Tipo de Task\",\n    \"Latitude\",\n    \"Longitude\",\n    \"Situação\",\n    \"Tipo de Infração\",\n    \"Medidas Tomadas\",\n    \"Outras Agências\",\n    \"OBS\",\n  ];\n\n  // Para cada registro, converte os campos de localização para o formato desejado.\n  // Aqui, assume-se que os campos 'latitude' e 'longitude' foram atualizados via os inputs.\n  const combinedData = dadosSelecionados.map((row) => {\n    const lat = convertLocation(row.latitude, true);\n    const lon = convertLocation(row.longitude, false);\n    return [\n      operacaoData.operacao,\n      operacaoData.entidade,\n      operacaoData.tipoOperacao,\n      operacaoData.nacionalidadeOperacao,\n      row.nomeEmbarcacao,\n      row.numRegisto,\n      row.numMatricula,\n      row.tipoEmbarcacao,\n      row.nacionalidade,\n      row.nomeMestre,\n      row.ilha,\n      row.licenca,\n      row.data,\n      row.hora,\n      row.tipoDeTask,\n      lat,\n      lon,\n      row.situacao,\n      row.tipoInfracao,\n      row.medidasTomadas,\n      row.outrasAgencias,\n      row.observacoes,\n    ];\n  });\n\n  // Cria a planilha (worksheet) a partir dos dados\n  const worksheet = XLSX.utils.aoa_to_sheet([headers, ...combinedData]);\n  const workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workbook, worksheet, \"Dados\");\n  XLSX.writeFile(workbook, \"dados_exportados.xlsx\");\n};\n\n\n  return (\n    <div className=\"container\">\n      <h1>Dashboard de Navios</h1>\n      {loading ? (\n        <p>Carregando...</p>\n      ) : error ? (\n        <p className=\"error\">{error}</p>\n      ) : null}\n\n      <OperacaoTable\n        dadosOperacao={dadosOperacao}\n        config={[\n          config.operacoes,\n          config.entidades,\n          config.tiposEntidade,\n          config.nacionalidadeEntidade,\n        ]}\n        handleOperacaoChange={(e, index) => {\n          const novoValor = e.target.value;\n          setDadosOperacao((prev) => {\n            const novosDados = [...prev];\n            novosDados[index] = novoValor;\n            return novosDados;\n          });\n        }}\n      />\n\n      <NaviosTable\n        dadosFiltrados={dadosFiltrados}\n        adicionarAoDadostable={adicionarAoDadostable}\n        handleFiltroChange={handleFiltroChange}\n      />\n\n<DadosTable\n  dadosSelecionados={dadosSelecionados}\n  handleCellEdit={handleCellEdit}\n  updateCellValue={updateCellValue}\n  updateRowDisabled={updateRowDisabled}\n  removerLinha={removerLinha}\n  activeLocationFormat={activeLocationFormat}\n  setActiveLocationFormat={setActiveLocationFormat}\n  setDadosSelecionados={setDadosSelecionados} // Necessário para atualizar os registros\n/>\n\n\n      <button\n        onClick={enviarDados}\n        style={{ marginTop: \"20px\", padding: \"10px 20px\" }}\n      >\n        Enviar/Download de dados\n      </button>\n      <button\n        onClick={resetarDados}\n        style={{\n          marginTop: \"20px\",\n          padding: \"10px 20px\",\n          backgroundColor: \"#dc3545\",\n          color: \"white\",\n        }}\n      >\n        Resetar Dados\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}