{"version":3,"sources":["components/OperacaoTable.js","components/NaviosTable.js","components/LocalizacaoGG.js","components/LocalizacaoGGMM.js","components/LocalizacaoGGMMSS.js","components/DadosTable.js","App.js","reportWebVitals.js","index.js"],"names":["OperacaoTable","_ref","dadosOperacao","config","handleOperacaoChange","React","createElement","map","opcoes","index","key","value","onChange","e","opcao","i","type","placeholder","NaviosTable","dadosFiltrados","adicionarAoDadostable","handleFiltroChange","length","cabecalho","dados","slice","className","col","_","linha","onClick","celula","j","LocalizacaoGGLatitude","disabled","numeric","hemisferio","parts","split","style","display","alignItems","InputMask","mask","newNumeric","target","inputProps","Object","assign","width","newHemi","marginLeft","LocalizacaoGGLongitude","_ref2","LocalizacaoGGMMLatitude","trim","LocalizacaoGGMMLongitude","LocalizacaoGGMMSSLatitude","join","LocalizacaoGGMMSSLongitude","parseLocation","currentFormat","isLatitude","decimalDegrees","parseFloat","replace","isNaN","degDigits","degrees","parseInt","minutes","seconds","formatLocation","totalMinutes","targetFormat","absTotalMinutes","Math","abs","toFixed","floor","minStr","padStart","remainder","round","toString","DadosTable","dadosSelecionados","handleCellEdit","updateCellValue","updateRowDisabled","removerLinha","activeLocationFormat","setActiveLocationFormat","setDadosSelecionados","textAreaStyle","minWidth","maxWidth","minHeight","maxHeight","whiteSpace","wordBreak","colSpan","toggleModel","newFormat","updatedRows","row","totalMinutesLat","latitude","totalMinutesLon","longitude","newLat","newLon","dado","rowIndex","nomeEmbarcacao","numRegisto","numMatricula","tipoEmbarcacao","nacionalidade","nomeMestre","ilha","licenca","data","hora","tipoDeTask","situacao","tipoInfracao","rows","medidasTomadas","observacoes","App","setDadosOperacao","useState","saved","localStorage","getItem","JSON","parse","dadosNavios","setDadosNavios","filtros","setFiltros","loading","setLoading","error","setError","setConfig","nacionalidadeEntidade","operacoes","entidades","tiposEntidade","situacoes","tiposEmbarcacao","useEffect","Promise","all","async","response","axios","get","filter","Boolean","console","fetchConfig","linhasNavios","fetchNavios","then","setItem","stringify","every","filtro","String","toLowerCase","includes","convertLocation","format","numericParts","detectFormat","hemis","pop","toUpperCase","numericPart","deg","min","sec","result","novoValor","prev","novosDados","localizacaoGG","localizacaoGGMM","localizacaoGGMMSS","Date","toISOString","substring","toLocaleTimeString","hour","minute","hour12","colunaIndex","valor","cellKey","innerText","field","status","enviarDados","alert","operacaoData","operacao","entidade","tipoOperacao","nacionalidadeOperacao","outrasAgencias","combinedData","lat","lon","worksheet","XLSX","aoa_to_sheet","workbook","book_new","book_append_sheet","marginTop","padding","resetarDados","window","confirm","clear","location","reload","backgroundColor","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2b35ebe6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst OperacaoTable = ({ dadosOperacao, config, handleOperacaoChange }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Operação</th>\n          <th>Entidade</th>\n          <th>Tipo de Operação</th>\n          <th>Nacionalidade</th>\n          <th>Outras Agências</th> {/* Adicionando a nova coluna */}\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {config.map((opcoes, index) => (\n            <td key={index}>\n              <select\n                value={dadosOperacao[index] || \"\"}\n                onChange={(e) => handleOperacaoChange(e, index)}\n              >\n                <option value=\"\">Selecione</option>\n                {opcoes.map((opcao, i) => (\n                  <option key={i} value={opcao}>\n                    {opcao}\n                  </option>\n                ))}\n              </select>\n            </td>\n          ))}\n          <td>\n            <input\n              type=\"text\"\n              value={dadosOperacao[4] || \"\"} // Índice 4 para \"Outras Agências\"\n              onChange={(e) => handleOperacaoChange(e, 4)}\n              placeholder=\"Informe outras agências\"\n            />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default OperacaoTable;\n","import React from \"react\";\n\nconst NaviosTable = ({ dadosFiltrados = [], adicionarAoDadostable, handleFiltroChange }) => {\n  if (!dadosFiltrados || dadosFiltrados.length === 0) {\n    return <p>Lista de navios sendo carregada, aguarde...por favor!!!.</p>;\n  }\n\n  // A primeira linha é o cabeçalho e as demais são os dados\n  const cabecalho = dadosFiltrados[0];\n  const dados = dadosFiltrados.slice(1);\n\n  return (\n    <div className=\"naviostable\">\n      <div className=\"table-wrapper\">\n\n        <table>\n          <thead>\n            {/* Linha de cabeçalho com os nomes das colunas */}\n            <tr>\n              <th>Ação</th>\n              {cabecalho.map((col, index) => (\n                <th key={index}>{col}</th>\n              ))}\n            </tr>\n            {/* Linha de filtros */}\n            <tr>\n              <th></th>\n              {cabecalho.map((_, index) => (\n                <th key={index}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Filtrar\"\n                    onChange={(e) => handleFiltroChange(e, index)}\n                  />\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {dados.map((linha, i) => (\n              <tr key={i}>\n                <td>\n                  <button onClick={() => adicionarAoDadostable(linha)}>\n                    Escolher\n                  </button>\n                </td>\n                {linha.map((celula, j) => (\n                  <td key={j}>{celula}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default NaviosTable;\n","import React from \"react\";\nimport InputMask from \"react-input-mask\";\n//import { convertLocation } from \"../utils/convertLocation\"; // Importando a função\n\n\nexport const LocalizacaoGGLatitude = ({ value, onChange, disabled }) => {\n  let numeric = \"\";\n  let hemisferio = \"N\"; // Definir padrão como \"N\"\n\n  if (value) {\n    const parts = value.split(\" \");\n    numeric = parts[0] || \"\";\n    hemisferio = parts[1] || \"N\"; // Garante que sempre haverá um hemisfério\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value;\n    onChange({ target: { value: newNumeric + \" \" + hemisferio } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: numeric + \" \" + newHemi } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"60px\" }} />}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"N\">N</option>\n        <option value=\"S\">S</option>\n      </select>\n    </div>\n  );\n};\n\n\nexport const LocalizacaoGGLongitude = ({ value, onChange, disabled }) => {\n  let numeric = \"\";\n  let hemisferio = \"W\"; // Definir padrão como \"W\"\n\n  if (value) {\n    const parts = value.split(\" \");\n    numeric = parts[0] || \"\";\n    hemisferio = parts[1] || \"W\"; // Garante que sempre haverá um hemisfério\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value;\n    onChange({ target: { value: newNumeric + \" \" + hemisferio } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: numeric + \" \" + newHemi } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"60px\" }} />}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"E\">E</option>\n        <option value=\"W\">W</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\nimport InputMask from \"react-input-mask\";\n//import { convertLocation } from \"../utils/convertLocation\"; // Importando a função\n\nexport const LocalizacaoGGMMLatitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99,99 H\" (H = N ou S)\n  let numeric = \"\";\n  let hemisferio = \"N\";\n\n  if (value) {\n    const parts = value.trim().split(\" \");\n    if (parts.length >= 3) {\n      numeric = `${parts[0]} ${parts[1]}`;\n      hemisferio = parts[2];\n    } else if (parts.length === 2) {\n      numeric = `${parts[0]} ${parts[1]}`;\n    } else {\n      numeric = parts[0] || \"\";\n    }\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value.trim();\n    onChange({ target: { value: newNumeric + (hemisferio ? ` ${hemisferio}` : \" N\") } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: `${numeric} ${newHemi}`.trim() } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99 99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"80px\" }} />}\n      </InputMask>\n      <select value={hemisferio} onChange={handleHemiChange} disabled={disabled} style={{ marginLeft: \"4px\" }}>\n        <option value=\"N\">N</option>\n        <option value=\"S\">S</option>\n      </select>\n    </div>\n  );\n};\n\nexport const LocalizacaoGGMMLongitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99,99 H\" (H = E ou W)\n  let numeric = \"\";\n  let hemisferio = \"W\";\n\n  if (value) {\n    const parts = value.trim().split(\" \");\n    if (parts.length >= 3) {\n      numeric = `${parts[0]} ${parts[1]}`;\n      hemisferio = parts[2];\n    } else if (parts.length === 2) {\n      numeric = `${parts[0]} ${parts[1]}`;\n    } else {\n      numeric = parts[0] || \"\";\n    }\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value.trim();\n    onChange({ target: { value: newNumeric + (hemisferio ? ` ${hemisferio}` : \" W\") } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: `${numeric} ${newHemi}`.trim() } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99 99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"80px\" }} />}\n      </InputMask>\n      <select value={hemisferio} onChange={handleHemiChange} disabled={disabled} style={{ marginLeft: \"4px\" }}>\n        <option value=\"E\">E</option>\n        <option value=\"W\">W</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\nimport InputMask from \"react-input-mask\";\n//import { convertLocation } from \"../utils/convertLocation\"; // Importando a função\n\nexport const LocalizacaoGGMMSSLatitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99 99 H\" (H = N ou S)\n  let numeric = \"\";\n  let hemisferio = \"N\";\n\n  if (value) {\n    const parts = value.trim().split(\" \");\n    if (parts.length >= 4) {\n      numeric = `${parts[0]} ${parts[1]} ${parts[2]}`;\n      hemisferio = parts[3];\n    } else {\n      numeric = parts.slice(0, 3).join(\" \");\n    }\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value.trim();\n    onChange({ target: { value: `${newNumeric} ${hemisferio}`.trim() } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: `${numeric} ${newHemi}`.trim() } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask \n        mask=\"99 99 99\" \n        value={numeric} \n        onChange={handleNumericChange} \n        disabled={disabled}\n      >\n        {(inputProps) => (\n          <input {...inputProps} type=\"text\" style={{ width: \"100px\" }} />\n        )}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"N\">N</option>\n        <option value=\"S\">S</option>\n      </select>\n    </div>\n  );\n};\n\nexport const LocalizacaoGGMMSSLongitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99 99 H\" (H = E ou W)\n  let numeric = \"\";\n  let hemisferio = \"W\";\n\n  if (value) {\n    const parts = value.trim().split(\" \");\n    if (parts.length >= 4) {\n      numeric = `${parts[0]} ${parts[1]} ${parts[2]}`;\n      hemisferio = parts[3];\n    } else {\n      numeric = parts.slice(0, 3).join(\" \");\n    }\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value.trim();\n    onChange({ target: { value: `${newNumeric} ${hemisferio}`.trim() } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: `${numeric} ${newHemi}`.trim() } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask \n        mask=\"99 99 99\" \n        value={numeric} \n        onChange={handleNumericChange} \n        disabled={disabled}\n      >\n        {(inputProps) => (\n          <input {...inputProps} type=\"text\" style={{ width: \"100px\" }} />\n        )}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"E\">E</option>\n        <option value=\"W\">W</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { LocalizacaoGGLatitude, LocalizacaoGGLongitude } from \"./LocalizacaoGG\";\nimport { LocalizacaoGGMMLatitude, LocalizacaoGGMMLongitude } from \"./LocalizacaoGGMM\";\nimport { LocalizacaoGGMMSSLatitude, LocalizacaoGGMMSSLongitude } from \"./LocalizacaoGGMMSS\";\n\n// Converte o valor da coordenada para o total de minutos.\n// Para o formato GG, o valor é interpretado como graus decimais (por exemplo, \"15,06\" significa 15,06°).\nconst parseLocation = (value, currentFormat, isLatitude) => {\n  if (!value || value.trim() === \"\") return null;\n  value = value.trim();\n  \n  if (currentFormat === \"GG\") {\n    const decimalDegrees = parseFloat(value.replace(\",\", \".\"));\n    if (isNaN(decimalDegrees)) return null;\n    return decimalDegrees * 60; // total de minutos\n  } else if (currentFormat === \"GGMM\") {\n    // Aqui, usamos sempre 2 dígitos para os graus\n    const degDigits = 2;\n    const degrees = parseInt(value.slice(0, degDigits), 10);\n    const minutes = parseFloat(value.slice(degDigits).replace(\",\", \".\"));\n    if (isNaN(degrees) || isNaN(minutes)) return null;\n    return degrees * 60 + minutes;\n  } else if (currentFormat === \"GGMMSS\") {\n    // Aqui, também usamos sempre 2 dígitos para os graus\n    const degDigits = 2;\n    const degrees = parseInt(value.slice(0, degDigits), 10);\n    const minutes = parseInt(value.slice(degDigits, degDigits + 2), 10);\n    const seconds = parseInt(value.slice(degDigits + 2, degDigits + 4), 10);\n    if (isNaN(degrees) || isNaN(minutes) || isNaN(seconds)) return null;\n    return degrees * 60 + minutes + seconds / 60;\n  }\n  return null;\n};\n\n// Formata um total de minutos para o formato de destino.\n// Para GG: retorna graus decimais (exemplo: \"15,06\")  \n// Para GGMM: retorna \"graus minutos,mm\" (exemplo: \"15 03,60\")\n// Para GGMMSS: retorna \"ggmmss,00\" (exemplo: \"150336,00\"), ajustando caso os segundos arredondem para 60.\nconst formatLocation = (totalMinutes, targetFormat, isLatitude) => {\n  if (totalMinutes === null) return \"\";\n  const absTotalMinutes = Math.abs(totalMinutes);\n  \n  if (targetFormat === \"GG\") {\n    // Converte de volta para graus decimais (ex: \"15,06\")\n    const decimalDegrees = absTotalMinutes / 60;\n    return decimalDegrees.toFixed(2).replace(\".\", \",\");\n  } else if (targetFormat === \"GGMM\") {\n    // Converte para graus e minutos decimais (ex: \"15 03,60\")\n    const degrees = Math.floor(absTotalMinutes / 60);\n    const minutesDecimal = absTotalMinutes - degrees * 60;\n    let minStr = minutesDecimal.toFixed(2).replace(\".\", \",\");\n    // Se minStr tiver menos de 5 caracteres (por exemplo, \"3,60\"), garante que fique com 2 dígitos à esquerda\n    if (minStr.length < 5) {\n      minStr = minStr.padStart(5, \"0\");\n    }\n    return `${degrees} ${minStr}`;\n  } else if (targetFormat === \"GGMMSS\") {\n    // Converte para graus, minutos inteiros e segundos (ex: \"150336,00\")\n    let degrees = Math.floor(absTotalMinutes / 60);\n    let remainder = absTotalMinutes - degrees * 60;\n    let minutes = Math.floor(remainder);\n    let seconds = Math.round((remainder - minutes) * 60);\n    // Se os segundos arredondarem para 60, ajusta minutos e, se necessário, os graus\n    if (seconds === 60) {\n      seconds = 0;\n      minutes++;\n      if (minutes === 60) {\n        degrees++;\n        minutes = 0;\n      }\n    }\n    return `${degrees}${minutes.toString().padStart(2, \"0\")}${seconds.toString().padStart(2, \"0\")},00`;\n  }\n  return \"\";\n};\n\nconst DadosTable = ({\n  dadosSelecionados,\n  handleCellEdit,\n  updateCellValue,\n  updateRowDisabled,\n  removerLinha,\n  activeLocationFormat,       // \"GG\", \"GGMM\" ou \"GGMMSS\"\n  setActiveLocationFormat,    // Função para alterar o formato ativo\n  setDadosSelecionados,       // Função para atualizar os registros\n}) => {\n  if (!dadosSelecionados.length)\n    return (\n      <p>\n        Nenhuma embarcação selecionada. Use o filtro para buscar por embarcação e clique \"ESCOLHER\" para inserir a Embarcação!\n      </p>\n    );\n\n  // Função para alternar o formato e converter as coordenadas.\n  // Sequência: GG → GGMM, GGMM → GGMMSS, GGMMSS → GG.\n  const toggleModel = () => {\n    let newFormat;\n    if (activeLocationFormat === \"GG\") {\n      newFormat = \"GGMM\";\n    } else if (activeLocationFormat === \"GGMM\") {\n      newFormat = \"GGMMSS\";\n    } else {\n      newFormat = \"GG\";\n    }\n    const updatedRows = dadosSelecionados.map((row) => {\n      const totalMinutesLat = parseLocation(row.latitude, activeLocationFormat, true);\n      const totalMinutesLon = parseLocation(row.longitude, activeLocationFormat, false);\n      const newLat = formatLocation(totalMinutesLat, newFormat, true);\n      const newLon = formatLocation(totalMinutesLon, newFormat, false);\n      return { ...row, latitude: newLat, longitude: newLon };\n    });\n    setDadosSelecionados(updatedRows);\n    setActiveLocationFormat(newFormat);\n  };\n\n  // Exemplo de estilo para áreas de texto (não relacionado à conversão de coordenadas)\n  const textAreaStyle = {\n    minWidth: \"150px\",\n    maxWidth: \"300px\",\n    minHeight: \"50px\",\n    maxHeight: \"150px\",\n    whiteSpace: \"pre-wrap\",\n    wordBreak: \"break-all\"\n  };\n\n  return (\n    <div className=\"dadostable\">\n      <div className=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              {/* Cabeçalho – colunas fixas */}\n              <th>Nome da Embarcação</th>\n              <th>Nº Registo/IMO</th>\n              <th>Nº Matrícula/MMSI</th>\n              <th>Tipo de Embarcacao</th>\n              <th>Nacionalidade</th>\n              <th>Nome do Mestre</th>\n              <th>Ilha</th>\n              <th>Licença</th>\n              <th>Data</th>\n              <th>Hora</th>\n              <th>Tipo de Task</th>\n              <th colSpan=\"2\">\n                <button onClick={toggleModel}>\n                  ALTERNAR FORMATO: {activeLocationFormat}\n                </button>\n                <br />\n                Latitude / Longitude\n              </th>\n              <th>Situação</th>\n              <th>Tipo de Infração</th>\n              <th>Medidas Tomadas</th>\n              <th>OBS</th>\n              <th>Ações</th>\n            </tr>\n          </thead>\n          <tbody>\n            {dadosSelecionados.map((dado, rowIndex) => (\n              <tr key={rowIndex}>\n                <td>{dado.nomeEmbarcacao}</td>\n                <td>{dado.numRegisto}</td>\n                <td>{dado.numMatricula}</td>\n                <td>{dado.tipoEmbarcacao}</td>\n                <td>{dado.nacionalidade}</td>\n                <td>{dado.nomeMestre}</td>\n                <td>{dado.ilha}</td>\n                <td>{dado.licenca}</td>\n                <td>\n                  <input\n                    type=\"date\"\n                    value={dado.data}\n                    onChange={(e) => updateCellValue(rowIndex, \"data\", e.target.value)}\n                    disabled={dado.disabled}\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"time\"\n                    value={dado.hora}\n                    onChange={(e) => updateCellValue(rowIndex, \"hora\", e.target.value)}\n                    disabled={dado.disabled}\n                  />\n                </td>\n                <td>\n                  {dado.disabled ? (\n                    <span>{dado.tipoDeTask}</span>\n                  ) : (\n                    <select\n                      value={dado.tipoDeTask}\n                      onChange={(e) => updateCellValue(rowIndex, \"tipoDeTask\", e.target.value)}\n                      disabled={dado.disabled}\n                    >\n                      <option value=\"\">Selecione...</option>\n                      <option value=\"Abordado\">Abordado</option>\n                      <option value=\"Avistado\">Avistado</option>\n                      <option value=\"Investigado\">Investigado</option>\n                    </select>\n                  )}\n                </td>\n                {/* Exibição da latitude conforme o formato ativo */}\n                <td>\n                  {activeLocationFormat === \"GG\" ? (\n                    <LocalizacaoGGLatitude\n                      value={dado.latitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"latitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMM\" ? (\n                    <LocalizacaoGGMMLatitude\n                      value={dado.latitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"latitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMMSS\" ? (\n                    <LocalizacaoGGMMSSLatitude\n                      value={dado.latitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"latitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : (\n                    <input\n                      type=\"text\"\n                      value=\"\"\n                      disabled\n                      placeholder=\"Inativo\"\n                      style={{ width: \"80px\" }}\n                    />\n                  )}\n                </td>\n                {/* Exibição da longitude conforme o formato ativo */}\n                <td>\n                  {activeLocationFormat === \"GG\" ? (\n                    <LocalizacaoGGLongitude\n                      value={dado.longitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"longitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMM\" ? (\n                    <LocalizacaoGGMMLongitude\n                      value={dado.longitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"longitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMMSS\" ? (\n                    <LocalizacaoGGMMSSLongitude\n                      value={dado.longitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"longitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : (\n                    <input\n                      type=\"text\"\n                      value=\"\"\n                      disabled\n                      placeholder=\"Inativo\"\n                      style={{ width: \"80px\" }}\n                    />\n                  )}\n                </td>\n                {/* Dropdown para Situação */}\n                <td>\n                  {dado.disabled ? (\n                    <span>{dado.situacao}</span>\n                  ) : (\n                    <select\n                      value={dado.situacao}\n                      onChange={(e) => updateCellValue(rowIndex, \"situacao\", e.target.value)}\n                      disabled={dado.disabled}\n                    >\n                      <option value=\"\">Selecione...</option>\n                      <option value=\"Irregular\">Irregular</option>\n                      <option value=\"Ilegal\">Ilegal</option>\n                      <option value=\"Legal\">Legal</option>\n                    </select>\n                  )}\n                </td>\n                {/* Áreas de texto para campos longos */}\n                <td>\n                  <textarea\n                    value={dado.tipoInfracao}\n                    onChange={(e) => updateCellValue(rowIndex, \"tipoInfracao\", e.target.value)}\n                    disabled={dado.disabled}\n                    style={textAreaStyle}\n                    rows={3}\n                  />\n                </td>\n                <td>\n                  <textarea\n                    value={dado.medidasTomadas}\n                    onChange={(e) => updateCellValue(rowIndex, \"medidasTomadas\", e.target.value)}\n                    disabled={dado.disabled}\n                    style={textAreaStyle}\n                    rows={3}\n                  />\n                </td>\n                <td>\n                  <textarea\n                    value={dado.observacoes}\n                    onChange={(e) => updateCellValue(rowIndex, \"observacoes\", e.target.value)}\n                    disabled={dado.disabled}\n                    style={textAreaStyle}\n                    rows={3}\n                  />\n                </td>\n                {/* Ações */}\n                <td>\n                  <button onClick={() => updateRowDisabled(rowIndex, !dado.disabled)}>\n                    {dado.disabled ? \"Editar\" : \"Pronto\"}\n                  </button>\n                  <button onClick={() => removerLinha(rowIndex)}>Excluir</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default DadosTable;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport OperacaoTable from \"./components/OperacaoTable\";\nimport NaviosTable from \"./components/NaviosTable\";\nimport DadosTable from \"./components/DadosTable\";\nimport \"./App.css\";\nimport * as XLSX from \"xlsx\"; // Para exportação\n\nconst GOOGLE_SHEET_URL =\n  \"https://docs.google.com/spreadsheets/d/e/2PACX-1vR6IEKVLswVSPSlD5qKBtbTqwj7ciZOhr40a84inuVTeeXIyC8KueX8IaVW2tILpaVxp5p2OsoxBi6g/pub?output=csv\";\nconst GOOGLE_SHEET_CONFIG_URL =\n  \"https://docs.google.com/spreadsheets/d/e/2PACX-1vQmY3QHsDgxr-YD_5pvQla3QqEv54ek8sqB1HolsYgfOaFpTT7huZI-E7EVtt_TV0hD0Jq52j46y4vn/pub?gid=481503026&single=true&output=csv\";\n\nfunction App() {\n  // Estados com persistência via localStorage\n  const [dadosOperacao, setDadosOperacao] = useState(() => {\n    const saved = localStorage.getItem(\"dadosOperacao\");\n    return saved ? JSON.parse(saved) :  [\"\", \"\", \"\", \"\", \"\"];\n  });\n  const [dadosSelecionados, setDadosSelecionados] = useState(() => {\n    const saved = localStorage.getItem(\"dadosSelecionados\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [dadosNavios, setDadosNavios] = useState([]);\n  const [filtros, setFiltros] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [config, setConfig] = useState({\n    nacionalidadeEntidade: [],\n    operacoes: [],\n    entidades: [],\n    tiposEntidade: [],\n    situacoes: [],\n    tiposEmbarcacao: [],\n  });\n\n  // Estado para formato de localização ativo (\"GG\", \"GGMM\" ou \"GGMMSS\")\n  //const [activeLocationFormat, setActiveLocationFormat] = useState(\"GG\");\n\n  useEffect(() => {\n    async function fetchConfig() {\n      try {\n        const response = await axios.get(GOOGLE_SHEET_CONFIG_URL);\n        const linhas = response.data.split(\"\\n\").map((linha) => linha.split(\",\"));\n        const dados = linhas.slice(1); // Remove o cabeçalho\n        setConfig({\n          nacionalidadeEntidade: dados.map((row) => row[0]).filter(Boolean),\n          operacoes: dados.map((row) => row[2]).filter(Boolean),\n          entidades: dados.map((row) => row[4]).filter(Boolean),\n          tiposEntidade: dados.map((row) => row[6]).filter(Boolean),\n          situacoes: dados.map((row) => row[8]).filter(Boolean),\n          tiposEmbarcacao: dados.map((row) => row[10]).filter(Boolean),\n        });\n      } catch (error) {\n        console.error(\"Erro ao buscar configuração:\", error);\n        setError(\"Falha ao carregar configurações.\");\n      }\n    }\n    async function fetchNavios() {\n      try {\n        const response = await axios.get(GOOGLE_SHEET_URL);\n        const linhasNavios = response.data.split(\"\\n\").map((linha) => linha.split(\",\"));\n        setDadosNavios(linhasNavios);\n      } catch (error) {\n        console.error(\"Erro ao buscar dados dos navios:\", error);\n        setError(\"Falha ao carregar dados dos navios.\");\n      }\n    }\n    Promise.all([fetchConfig(), fetchNavios()]).then(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"dadosOperacao\", JSON.stringify(dadosOperacao));\n  }, [dadosOperacao]);\n  useEffect(() => {\n    localStorage.setItem(\"dadosSelecionados\", JSON.stringify(dadosSelecionados));\n  }, [dadosSelecionados]);\n\n  const handleFiltroChange = (e, colunaIndex) => {\n    const valor = e.target.value;\n    setFiltros((prev) => ({ ...prev, [colunaIndex]: valor }));\n  };\n\n  const dadosFiltrados = dadosNavios.filter((linha, i) => {\n    if (i === 0) return true; // Cabeçalho permanece\n    return linha.every((celula, j) => {\n      const filtro = filtros[j];\n      if (!filtro) return true;\n      const valorCelula = celula ? String(celula).toLowerCase() : \"\";\n      return valorCelula.includes(filtro.toLowerCase());\n    });\n  });\n\n  const adicionarAoDadostable = (linha) => {\n    if (\n      linha[0] &&\n      linha[0].trim().toLowerCase() === \"nome da embarcação\".toLowerCase()\n    ) {\n      return;\n    }\n    setDadosSelecionados((prev) => [\n      ...prev,\n      {\n        nomeEmbarcacao: linha[0],\n        tipoDeTask: \"\",\n        numRegisto: linha[1],\n        numMatricula: linha[2],\n        tipoEmbarcacao: linha[3],\n        nacionalidade: linha[4],\n        nomeMestre: linha[5],\n        ilha: linha[6],\n        licenca: linha[7],\n        // Inicialmente, os campos de localização ficam vazios.\n        localizacaoGG: \"\",\n        localizacaoGGMM: \"\",\n        localizacaoGGMMSS: \"\",\n        // Utilizamos os campos latitude e longitude para a entrada do usuário.\n        latitude: \"\",\n        longitude: \"\",\n        situacao: \"\",\n        tipoInfracao: \"\",\n        medidasTomadas: \"\",\n        //outrasAgencias: \"\",\n        observacoes: \"\",\n        disabled: false,\n        data: new Date().toISOString().substring(0, 10),\n        hora: new Date().toLocaleTimeString(\"pt-PT\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false,\n        }),\n      },\n    ]);\n  };\n\n  const handleCellEdit = (e, rowIndex, cellKey) => {\n    const novoValor = e.target.innerText;\n    setDadosSelecionados((prev) => {\n      const novosDados = [...prev];\n      novosDados[rowIndex][cellKey] = novoValor;\n      return novosDados;\n    });\n  };\n\n  const updateCellValue = (rowIndex, field, value) => {\n    setDadosSelecionados((prev) => {\n      const novosDados = [...prev];\n      novosDados[rowIndex][field] = value;\n      return novosDados;\n    });\n  };\n\n  const updateRowDisabled = (rowIndex, status) => {\n    setDadosSelecionados((prev) => {\n      const novosDados = [...prev];\n      novosDados[rowIndex].disabled = status;\n      return novosDados;\n    });\n  };\n\n  const removerLinha = (rowIndex) => {\n    setDadosSelecionados((prev) =>\n      prev.filter((_, index) => index !== rowIndex)\n    );\n  };\n\n  const resetarDados = () => {\n    if (\n      window.confirm(\"Tem certeza que deseja resetar os dados e começar do zero?\")\n    ) {\n      localStorage.clear();\n      window.location.reload();\n    }\n  };\n\n// Função de conversão: recebe o valor da localização (ex.: \"12,34 N\" ou \"12 34,56 N\")\n// e retorna o formato (-)ggmm,mm (para latitude) ou (-)gggmm,mm (para longitude)\n// Detecta o formato da coordenada (GG,GG H | GG MM,MM H | GG MM SS H)\nconst detectFormat = (value) => {\n  if (!value) return null;\n  const trimmed = value.trim().replace(\",\", \".\"); // Substituir \",\" por \".\"\n  const parts = trimmed.split(\" \");\n\n  if (parts.length < 2) return null; // Precisa pelo menos de graus e hemisfério\n\n  const numericPart = parts.slice(0, parts.length - 1).join(\" \"); // Remove o hemisfério\n  const numericParts = numericPart.split(\" \");\n\n  if (numericParts.length === 1 && numericParts[0].includes(\".\")) {\n    return \"GG\"; // Exemplo: \"12,34 N\"\n  } else if (numericParts.length === 2 && numericParts[1].includes(\".\")) {\n    return \"GGMM\"; // Exemplo: \"12 34,56 N\"\n  } else if (numericParts.length === 3) {\n    return \"GGMMSS\"; // Exemplo: \"12 34 56 N\"\n  }\n  return null;\n};\n\n// Converte a coordenada detectada para (-)ggmm,mm ou (-)gggmm,mm\nconst convertLocation = (value, isLatitude) => {\n  if (!value) return \"\";\n  \n  const format = detectFormat(value);\n  if (!format) return value; // Retorna o original se não identificar\n\n  const trimmed = value.trim().replace(\",\", \".\"); \n  const parts = trimmed.split(\" \");\n  const hemis = parts.pop().toUpperCase(); // Último elemento é o hemisfério\n  const numericPart = parts.join(\" \");\n\n  let degrees = 0, minutes = 0, seconds = 0;\n\n  if (format === \"GG\") {\n    degrees = parseFloat(numericPart);\n    minutes = (degrees % 1) * 60;\n    degrees = Math.floor(degrees);\n  } else if (format === \"GGMM\") {\n    const [deg, min] = numericPart.split(\" \");\n    degrees = parseInt(deg, 10);\n    minutes = parseFloat(min);\n  } else if (format === \"GGMMSS\") {\n    const [deg, min, sec] = numericPart.split(\" \");\n    degrees = parseInt(deg, 10);\n    minutes = parseInt(min, 10);\n    seconds = parseFloat(sec);\n  }\n\n  // Converter segundos para fração de minutos\n  let minutesDecimal = (minutes + seconds / 60).toFixed(2);\n  let result = `${degrees}${minutesDecimal.replace(\".\", \",\")}`;\n\n  // Ajustar sinal baseado no hemisfério\n  if ((isLatitude && hemis === \"S\") || (!isLatitude && hemis === \"W\")) {\n    result = \"-\" + result;\n  }\n\n  return result;\n};\n\n\n\n\n  // Recupera o formato salvo ou usa \"GG\" como padrão\n  const [activeLocationFormat, setActiveLocationFormat] = useState(() => {\n    return localStorage.getItem(\"activeLocationFormat\") || \"GG\";\n  });\n\n\n  // Atualiza o localStorage sempre que o formato mudar\n  useEffect(() => {\n    localStorage.setItem(\"activeLocationFormat\", activeLocationFormat);\n  }, [activeLocationFormat]);\n\n\n\n\nconst enviarDados = () => {\n  // Verifica se os dados de operação foram alterados (não estão vazios)\n  if (dadosOperacao.every(field => field.trim() === \"\")) {\n    alert(\"Por favor, altere os dados de operação antes de enviar.\");\n    return;\n  }\n  \n  // Verifica se todas as linhas estão no estado 'Pronto' (disabled === true)\n  const notReadyRows = dadosSelecionados.filter(row => !row.disabled);\n  if (notReadyRows.length > 0) {\n    alert(\"Todas as linhas devem estar no estado 'Pronto' antes de enviar.\");\n    return;\n  }\n  \n  // Dados de operação (4 elementos)\n  const operacaoData = {\n    operacao: dadosOperacao[0] || \"\",\n    entidade: dadosOperacao[1] || \"\",\n    tipoOperacao: dadosOperacao[2] || \"\",\n    nacionalidadeOperacao: dadosOperacao[3] || \"\",\n    outrasAgencias: dadosOperacao[4] || \"\", // Adicionando campo\n  };\n  \n\n  // Definindo os cabeçalhos para o Excel (22 colunas)\n  const headers = [\n    \"Operação\",\n    \"Entidade\",\n    \"Tipo\",\n    \"Nacionalidade\",\n    \"Nome da Embarcação\",\n    \"Nº Registo/IMO\",\n    \"Nº Matrícula/MMSI\",\n    \"Tipo de Embarcacao\",\n    \"Nacionalidade\",\n    \"Nome do Mestre\",\n    \"Ilha\",\n    \"Licença\",\n    \"Data\",\n    \"Hora\",\n    \"Tipo de Task\",\n    \"Latitude\",\n    \"Longitude\",\n    \"Situação\",\n    \"Tipo de Infração\",\n    \"Medidas Tomadas\",\n    \"Outras Agências\",\n    \"OBS\",\n  ];\n\n  // Para cada registro, converte os campos de localização para o formato desejado.\n  // Aqui, assume-se que os campos 'latitude' e 'longitude' foram atualizados via os inputs.\n  const combinedData = dadosSelecionados.map((row) => {\n    const lat = convertLocation(row.latitude, true);\n    const lon = convertLocation(row.longitude, false);\n    return [\n      operacaoData.operacao,\n      operacaoData.entidade,\n      operacaoData.tipoOperacao,\n      operacaoData.nacionalidadeOperacao,\n      row.nomeEmbarcacao,\n      row.numRegisto,\n      row.numMatricula,\n      row.tipoEmbarcacao,\n      row.nacionalidade,\n      row.nomeMestre,\n      row.ilha,\n      row.licenca,\n      row.data,\n      row.hora,\n      row.tipoDeTask,\n      lat,\n      lon,\n      //row.latitude,  // Mantém os valores exatamente como estão\n      //row.longitude, // Sem conversão\n      row.situacao,\n      row.tipoInfracao,\n      row.medidasTomadas,\n      operacaoData.outrasAgencias,\n      row.observacoes,\n    ];\n  });\n\n  // Cria a planilha (worksheet) a partir dos dados\n  const worksheet = XLSX.utils.aoa_to_sheet([headers, ...combinedData]);\n  const workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workbook, worksheet, \"Dados\");\n  XLSX.writeFile(workbook, \"dados_exportados.xlsx\");\n};\n\n\n  return (\n    <div className=\"container\">\n      <h1>FORMULÁRIO PARA NAVIOS ABORDADOS/AVISTADOS/INVESTIGADOS</h1>\n      {loading ? (\n        <p>Carregando...</p>\n      ) : error ? (\n        <p className=\"error\">{error}</p>\n      ) : null}\n\n<OperacaoTable\n  dadosOperacao={dadosOperacao}\n  config={[\n    config.operacoes,\n    config.entidades,\n    config.tiposEntidade,\n    config.nacionalidadeEntidade,\n  ]}\n  handleOperacaoChange={(e, index) => {\n    const novoValor = e.target.value;\n    setDadosOperacao((prev) => {\n      const novosDados = [...prev];\n      novosDados[index] = novoValor; // Atualiza corretamente qualquer campo\n      return novosDados;\n    });\n  }}\n/>\n\n      <NaviosTable\n        dadosFiltrados={dadosFiltrados}\n        adicionarAoDadostable={adicionarAoDadostable}\n        handleFiltroChange={handleFiltroChange}\n      />\n\n<DadosTable\n  dadosSelecionados={dadosSelecionados}\n  handleCellEdit={handleCellEdit}\n  updateCellValue={updateCellValue}\n  updateRowDisabled={updateRowDisabled}\n  removerLinha={removerLinha}\n  activeLocationFormat={activeLocationFormat}\n  setActiveLocationFormat={setActiveLocationFormat}\n  setDadosSelecionados={setDadosSelecionados} // Necessário para atualizar os registros\n/>\n\n\n      <button\n        onClick={enviarDados}\n        style={{ marginTop: \"20px\", padding: \"10px 20px\" }}\n      >\n        Enviar/Download de dados\n      </button>\n      <button\n        onClick={resetarDados}\n        style={{\n          marginTop: \"20px\",\n          padding: \"10px 20px\",\n          backgroundColor: \"#dc3545\",\n          color: \"white\",\n        }}\n      >\n        Resetar Dados\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}