{"version":3,"sources":["components/OperacaoTable.js","components/NaviosTable.js","components/LocalizacaoGG.js","components/LocalizacaoGGMM.js","components/LocalizacaoGGMMSS.js","components/DadosTable.js","App.js","reportWebVitals.js","index.js"],"names":["OperacaoTable","_ref","dadosOperacao","config","handleOperacaoChange","React","createElement","value","onChange","e","map","opcao","i","key","target","type","placeholder","disabled","NaviosTable","dadosFiltrados","adicionarAoDadostable","handleFiltroChange","length","cabecalho","dados","slice","className","col","index","_","linha","onClick","celula","j","LocalizacaoGGLatitude","numeric","hemisferio","parts","split","style","display","alignItems","InputMask","mask","newNumeric","inputProps","Object","assign","width","newHemi","marginLeft","LocalizacaoGGLongitude","_ref2","LocalizacaoGGMMLatitude","trim","LocalizacaoGGMMLongitude","LocalizacaoGGMMSSLatitude","join","LocalizacaoGGMMSSLongitude","parseLocation","currentFormat","isLatitude","parseInt","parseFloat","replace","degDigits","formatLocation","totalMinutes","targetFormat","degrees","Math","floor","minutesDecimal","String","padStart","toFixed","degStr","min","sec","round","DadosTable","dadosSelecionados","handleCellEdit","updateCellValue","updateRowDisabled","removerLinha","activeLocationFormat","setActiveLocationFormat","setDadosSelecionados","tipoInfracaoOptions","textAreaStyle","minWidth","maxWidth","minHeight","maxHeight","whiteSpace","wordBreak","MultiSelectDropdown","options","isOpen","setIsOpen","useState","handleCheckboxChange","optionValue","newValue","checked","filter","v","selectedText","option","includes","position","toggleDropdown","border","padding","cursor","backgroundColor","top","left","right","zIndex","overflowY","title","description","colSpan","toggleModel","newFormat","updatedRows","row","totalMinutesLat","latitude","totalMinutesLon","longitude","newLat","newLon","dado","rowIndex","nomeEmbarcacao","numRegisto","data","hora","tipoDeTask","situacao","Array","isArray","tipoInfracao","selectedValues","medidasTomadas","rows","observacoes","App","setDadosOperacao","saved","localStorage","getItem","JSON","parse","dadosNavios","setDadosNavios","filtros","setFiltros","loading","setLoading","error","setError","setConfig","nacionalidadeEntidade","operacoes","entidades","tiposEntidade","situacoes","tiposEmbarcacao","showInfractionsModal","setShowInfractionsModal","useEffect","Promise","all","async","response","axios","get","parsed","Papa","header","Boolean","item","console","fetchConfig","linhasNavios","fetchNavios","then","setItem","stringify","every","filtro","toLowerCase","convertLocation","format","numericParts","detectFormat","hemis","pop","toUpperCase","numericPart","minutes","seconds","deg","result","novoValor","prev","novosDados","numMatricula","tipoEmbarcacao","nacionalidade","nomeMestre","ilha","licenca","localizacaoGG","localizacaoGGMM","localizacaoGGMMSS","Date","toISOString","substring","toLocaleTimeString","hour","minute","hour12","colunaIndex","valor","cellKey","innerText","field","status","enviarDados","alert","operacaoData","operacao","entidade","tipoOperacao","nacionalidadeOperacao","outrasAgencias","combinedData","lat","lon","worksheet","XLSX","aoa_to_sheet","workbook","book_new","book_append_sheet","marginTop","resetarDados","window","confirm","clear","location","reload","color","bottom","justifyContent","borderRadius","textAlign","paddingLeft","margin","marginBottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.bf8727fc.chunk.js","sourcesContent":["import React from \"react\";\n\nconst OperacaoTable = ({ dadosOperacao, config, handleOperacaoChange }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Operação</th>\n          <th>Entidade</th>\n          <th>Detalhe Entidade</th>\n          <th>Tipo de Entidade</th>\n          <th>Nacionalidade</th>\n          <th>Outras Agências</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {/* Operação */}\n          <td>\n            <select\n              value={dadosOperacao[0] || \"\"}\n              onChange={(e) => handleOperacaoChange(e, 0)}\n            >\n              <option value=\"\">Selecione</option>\n              {config[0] &&\n                config[0].map((opcao, i) => (\n                  <option key={i} value={opcao}>\n                    {opcao}\n                  </option>\n                ))}\n            </select>\n          </td>\n          {/* Entidade */}\n          <td>\n            <select\n              value={dadosOperacao[1] || \"\"}\n              onChange={(e) => {\n                handleOperacaoChange(e, 1);\n                if (e.target.value === \"SIM/NAVIO\") {\n                  // Automatically set Tipo de Entidade and Nacionalidade for NAVIO\n                  handleOperacaoChange({ target: { value: \"NAVIO\" } }, 3);\n                  handleOperacaoChange({ target: { value: \"Cabo Verde\" } }, 4);\n                } else if (e.target.value === \"SIM/AERONAVE\") {\n                  // Automatically set Tipo de Entidade and Nacionalidade for AERONAVE\n                  handleOperacaoChange({ target: { value: \"AERONAVE\" } }, 3);\n                  handleOperacaoChange({ target: { value: \"Cabo Verde\" } }, 4);\n                }\n              }}\n            >\n              <option value=\"\">Selecione</option>\n              {config[1] &&\n                config[1].map((opcao, i) => (\n                  <option key={i} value={opcao}>\n                    {opcao}\n                  </option>\n                ))}\n            </select>\n          </td>\n          {/* Detalhe Entidade (enabled only if Entidade is \"OUTRO\") */}\n          <td>\n            <input\n              type=\"text\"\n              value={dadosOperacao[2] || \"\"}\n              onChange={(e) => handleOperacaoChange(e, 2)}\n              placeholder=\"Informe detalhe\"\n              disabled={dadosOperacao[1] !== \"OUTRO\"}\n            />\n          </td>\n          {/* Tipo de Entidade */}\n          <td>\n            {(dadosOperacao[1] === \"SIM/NAVIO\" || dadosOperacao[1] === \"SIM/AERONAVE\") ? (\n              <select value={dadosOperacao[1] === \"SIM/NAVIO\" ? \"NAVIO\" : \"AERONAVE\"} disabled>\n                <option value={dadosOperacao[1] === \"SIM/NAVIO\" ? \"NAVIO\" : \"AERONAVE\"}>\n                  {dadosOperacao[1] === \"SIM/NAVIO\" ? \"NAVIO\" : \"AERONAVE\"}\n                </option>\n              </select>\n            ) : (\n              <select\n                value={dadosOperacao[3] || \"\"}\n                onChange={(e) => handleOperacaoChange(e, 3)}\n              >\n                <option value=\"\">Selecione</option>\n                {config[2] &&\n                  config[2].map((opcao, i) => (\n                    <option key={i} value={opcao}>\n                      {opcao}\n                    </option>\n                  ))}\n              </select>\n            )}\n          </td>\n          {/* Nacionalidade */}\n          <td>\n            {(dadosOperacao[1] === \"SIM/NAVIO\" || dadosOperacao[1] === \"SIM/AERONAVE\") ? (\n              <select value=\"Cabo Verde\" disabled>\n                <option value=\"Cabo Verde\">Cabo Verde</option>\n              </select>\n            ) : (\n              <select\n                value={dadosOperacao[4] || \"\"}\n                onChange={(e) => handleOperacaoChange(e, 4)}\n              >\n                <option value=\"\">Selecione</option>\n                {config[3] &&\n                  config[3].map((opcao, i) => (\n                    <option key={i} value={opcao}>\n                      {opcao}\n                    </option>\n                  ))}\n              </select>\n            )}\n          </td>\n          {/* Outras Agências */}\n          <td>\n            <input\n              type=\"text\"\n              value={dadosOperacao[5] || \"\"}\n              onChange={(e) => handleOperacaoChange(e, 5)}\n              placeholder=\"Informe outras agências\"\n            />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default OperacaoTable;\n","import React from \"react\";\n\nconst NaviosTable = ({ dadosFiltrados = [], adicionarAoDadostable, handleFiltroChange }) => {\n  if (!dadosFiltrados || dadosFiltrados.length === 0) {\n    return <p>Lista de navios sendo carregada, aguarde...por favor!!!.</p>;\n  }\n\n  // A primeira linha é o cabeçalho e as demais são os dados\n  const cabecalho = dadosFiltrados[0];\n  const dados = dadosFiltrados.slice(1);\n\n  return (\n    <div className=\"naviostable\">\n      <div className=\"table-wrapper\">\n\n        <table>\n          <thead>\n            {/* Linha de cabeçalho com os nomes das colunas */}\n            <tr>\n              <th>Ação</th>\n              {cabecalho.map((col, index) => (\n                <th key={index}>{col}</th>\n              ))}\n            </tr>\n            {/* Linha de filtros */}\n            <tr>\n              <th></th>\n              {cabecalho.map((_, index) => (\n                <th key={index}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Filtrar\"\n                    onChange={(e) => handleFiltroChange(e, index)}\n                  />\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {dados.map((linha, i) => (\n              <tr key={i}>\n                <td>\n                  <button onClick={() => adicionarAoDadostable(linha)}>\n                    Escolher\n                  </button>\n                </td>\n                {linha.map((celula, j) => (\n                  <td key={j}>{celula}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default NaviosTable;\n","import React from \"react\";\nimport InputMask from \"react-input-mask\";\n//import { convertLocation } from \"../utils/convertLocation\"; // Importando a função\n\n\nexport const LocalizacaoGGLatitude = ({ value, onChange, disabled }) => {\n  let numeric = \"\";\n  let hemisferio = \"N\"; // Definir padrão como \"N\"\n\n  if (value) {\n    const parts = value.split(\" \");\n    numeric = parts[0] || \"\";\n    hemisferio = parts[1] || \"N\"; // Garante que sempre haverá um hemisfério\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value;\n    onChange({ target: { value: newNumeric + \" \" + hemisferio } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: numeric + \" \" + newHemi } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"60px\" }} />}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"N\">N</option>\n        <option value=\"S\">S</option>\n      </select>\n    </div>\n  );\n};\n\n\nexport const LocalizacaoGGLongitude = ({ value, onChange, disabled }) => {\n  let numeric = \"\";\n  let hemisferio = \"W\"; // Definir padrão como \"W\"\n\n  if (value) {\n    const parts = value.split(\" \");\n    numeric = parts[0] || \"\";\n    hemisferio = parts[1] || \"W\"; // Garante que sempre haverá um hemisfério\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value;\n    onChange({ target: { value: newNumeric + \" \" + hemisferio } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: numeric + \" \" + newHemi } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"60px\" }} />}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"E\">E</option>\n        <option value=\"W\">W</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\nimport InputMask from \"react-input-mask\";\n//import { convertLocation } from \"../utils/convertLocation\"; // Importando a função\n\nexport const LocalizacaoGGMMLatitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99,99 H\" (H = N ou S)\n  let numeric = \"\";\n  let hemisferio = \"N\";\n\n  if (value) {\n    const parts = value.trim().split(\" \");\n    if (parts.length >= 3) {\n      numeric = `${parts[0]} ${parts[1]}`;\n      hemisferio = parts[2];\n    } else if (parts.length === 2) {\n      numeric = `${parts[0]} ${parts[1]}`;\n    } else {\n      numeric = parts[0] || \"\";\n    }\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value.trim();\n    onChange({ target: { value: newNumeric + (hemisferio ? ` ${hemisferio}` : \" N\") } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: `${numeric} ${newHemi}`.trim() } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99 99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"80px\" }} />}\n      </InputMask>\n      <select value={hemisferio} onChange={handleHemiChange} disabled={disabled} style={{ marginLeft: \"4px\" }}>\n        <option value=\"N\">N</option>\n        <option value=\"S\">S</option>\n      </select>\n    </div>\n  );\n};\n\nexport const LocalizacaoGGMMLongitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99,99 H\" (H = E ou W)\n  let numeric = \"\";\n  let hemisferio = \"W\";\n\n  if (value) {\n    const parts = value.trim().split(\" \");\n    if (parts.length >= 3) {\n      numeric = `${parts[0]} ${parts[1]}`;\n      hemisferio = parts[2];\n    } else if (parts.length === 2) {\n      numeric = `${parts[0]} ${parts[1]}`;\n    } else {\n      numeric = parts[0] || \"\";\n    }\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value.trim();\n    onChange({ target: { value: newNumeric + (hemisferio ? ` ${hemisferio}` : \" W\") } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: `${numeric} ${newHemi}`.trim() } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask mask=\"99 99,99\" value={numeric} onChange={handleNumericChange} disabled={disabled}>\n        {(inputProps) => <input {...inputProps} type=\"text\" style={{ width: \"80px\" }} />}\n      </InputMask>\n      <select value={hemisferio} onChange={handleHemiChange} disabled={disabled} style={{ marginLeft: \"4px\" }}>\n        <option value=\"E\">E</option>\n        <option value=\"W\">W</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\nimport InputMask from \"react-input-mask\";\n//import { convertLocation } from \"../utils/convertLocation\"; // Importando a função\n\nexport const LocalizacaoGGMMSSLatitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99 99 H\" (H = N ou S)\n  let numeric = \"\";\n  let hemisferio = \"N\";\n\n  if (value) {\n    const parts = value.trim().split(\" \");\n    if (parts.length >= 4) {\n      numeric = `${parts[0]} ${parts[1]} ${parts[2]}`;\n      hemisferio = parts[3];\n    } else {\n      numeric = parts.slice(0, 3).join(\" \");\n    }\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value.trim();\n    onChange({ target: { value: `${newNumeric} ${hemisferio}`.trim() } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: `${numeric} ${newHemi}`.trim() } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask \n        mask=\"99 99 99\" \n        value={numeric} \n        onChange={handleNumericChange} \n        disabled={disabled}\n      >\n        {(inputProps) => (\n          <input {...inputProps} type=\"text\" style={{ width: \"100px\" }} />\n        )}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"N\">N</option>\n        <option value=\"S\">S</option>\n      </select>\n    </div>\n  );\n};\n\nexport const LocalizacaoGGMMSSLongitude = ({ value, onChange, disabled }) => {\n  // Valor esperado: \"99 99 99 H\" (H = E ou W)\n  let numeric = \"\";\n  let hemisferio = \"W\";\n\n  if (value) {\n    const parts = value.trim().split(\" \");\n    if (parts.length >= 4) {\n      numeric = `${parts[0]} ${parts[1]} ${parts[2]}`;\n      hemisferio = parts[3];\n    } else {\n      numeric = parts.slice(0, 3).join(\" \");\n    }\n  }\n\n  const handleNumericChange = (e) => {\n    const newNumeric = e.target.value.trim();\n    onChange({ target: { value: `${newNumeric} ${hemisferio}`.trim() } });\n  };\n\n  const handleHemiChange = (e) => {\n    const newHemi = e.target.value;\n    onChange({ target: { value: `${numeric} ${newHemi}`.trim() } });\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <InputMask \n        mask=\"99 99 99\" \n        value={numeric} \n        onChange={handleNumericChange} \n        disabled={disabled}\n      >\n        {(inputProps) => (\n          <input {...inputProps} type=\"text\" style={{ width: \"100px\" }} />\n        )}\n      </InputMask>\n      <select\n        value={hemisferio}\n        onChange={handleHemiChange}\n        disabled={disabled}\n        style={{ marginLeft: \"4px\" }}\n      >\n        <option value=\"E\">E</option>\n        <option value=\"W\">W</option>\n      </select>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { LocalizacaoGGLatitude, LocalizacaoGGLongitude } from \"./LocalizacaoGG\";\nimport { LocalizacaoGGMMLatitude, LocalizacaoGGMMLongitude } from \"./LocalizacaoGGMM\";\nimport { LocalizacaoGGMMSSLatitude, LocalizacaoGGMMSSLongitude } from \"./LocalizacaoGGMMSS\";\n\n// Função para converter o valor de localização em um número (total de minutos)\nconst parseLocation = (value, currentFormat, isLatitude) => {\n  if (!value || value.trim() === \"\") return null; // Retorna null se estiver vazio\n  value = value.trim();\n  if (currentFormat === \"GG\") {\n    const parts = value.split(\",\");\n    if (parts.length < 2) return null; // Garante que haja as duas partes\n    const degrees = parseInt(parts[0], 10);\n    const minutes = parseFloat(parts[1].replace(\",\", \".\"));\n    return degrees * 60 + minutes;\n  } else if (currentFormat === \"GGMM\") {\n    const degDigits = isLatitude ? 2 : 3;\n    const degrees = parseInt(value.slice(0, degDigits), 10);\n    const minutes = parseFloat(value.slice(degDigits).replace(\",\", \".\"));\n    return degrees * 60 + minutes;\n  } else if (currentFormat === \"GGMMSS\") {\n    const degDigits = isLatitude ? 2 : 3;\n    const degrees = parseInt(value.slice(0, degDigits), 10);\n    const minutes = parseInt(value.slice(degDigits, degDigits + 2), 10);\n    const seconds = parseInt(value.slice(degDigits + 2, degDigits + 4), 10);\n    return degrees * 60 + minutes + seconds / 60;\n  }\n  return 0;\n};\n\n// Função para formatar um total de minutos para o formato de destino\nconst formatLocation = (totalMinutes, targetFormat, isLatitude) => {\n  if (totalMinutes === null) return \"\"; // Se não houver valor, retorna string vazia\n  const degrees = Math.floor(totalMinutes / 60);\n  const minutesDecimal = totalMinutes - degrees * 60;\n  if (targetFormat === \"GG\") {\n    const degStr = isLatitude ? String(degrees).padStart(2, \"0\") : String(degrees).padStart(3, \"0\");\n    const minStr = minutesDecimal.toFixed(2).replace(\".\", \",\");\n    return `${degStr},${minStr}`;\n  } else if (targetFormat === \"GGMM\") {\n    const degStr = isLatitude ? String(degrees).padStart(2, \"0\") : String(degrees).padStart(3, \"0\");\n    const minStr = minutesDecimal.toFixed(2).replace(\".\", \",\");\n    return `${degStr}${minStr}`;\n  } else if (targetFormat === \"GGMMSS\") {\n    const degStr = isLatitude ? String(degrees).padStart(2, \"0\") : String(degrees).padStart(3, \"0\");\n    const min = Math.floor(minutesDecimal);\n    const sec = Math.round((minutesDecimal - min) * 60);\n    const minStr = String(min).padStart(2, \"0\");\n    const secStr = String(sec).padStart(2, \"0\");\n    return `${degStr}${minStr}${secStr},00`;\n  }\n  return \"\";\n};\n\nconst DadosTable = ({\n  dadosSelecionados,\n  handleCellEdit,\n  updateCellValue,\n  updateRowDisabled,\n  removerLinha,\n  activeLocationFormat,       // \"GG\", \"GGMM\" ou \"GGMMSS\"\n  setActiveLocationFormat,    // Função para alterar o formato ativo\n  setDadosSelecionados,       // Função para atualizar todos os registros\n  tipoInfracaoOptions,        // Novo: Array de objetos: { value, description }\n}) => {\n  if (!dadosSelecionados.length)\n    return (\n      <p>\n        Nenhuma embarcação selecionada. Use o filtro para buscar por embarcação e clique \"ESCOLHER\" para inserir a Embarcação!\n      </p>\n    );\n\n  // Função para alternar o modelo de posição e converter os valores existentes\n  const toggleModel = () => {\n    let newFormat;\n    if (activeLocationFormat === \"GG\") {\n      newFormat = \"GGMM\";\n    } else if (activeLocationFormat === \"GGMM\") {\n      newFormat = \"GGMMSS\";\n    } else {\n      newFormat = \"GG\";\n    }\n    const updatedRows = dadosSelecionados.map((row) => {\n      const totalMinutesLat = parseLocation(row.latitude, activeLocationFormat, true);\n      const totalMinutesLon = parseLocation(row.longitude, activeLocationFormat, false);\n      // Se o valor for null, mantenha o campo vazio\n      const newLat = totalMinutesLat !== null ? formatLocation(totalMinutesLat, newFormat, true) : \"\";\n      const newLon = totalMinutesLon !== null ? formatLocation(totalMinutesLon, newFormat, false) : \"\";\n      return { ...row, latitude: newLat, longitude: newLon };\n    });\n    setDadosSelecionados(updatedRows);\n    setActiveLocationFormat(newFormat);\n  };\n\n  // Estilo para os campos com área de texto (Medidas Tomadas, OBS)\n  const textAreaStyle = {\n    minWidth: \"150px\",\n    maxWidth: \"300px\",\n    minHeight: \"50px\",\n    maxHeight: \"150px\",\n    whiteSpace: \"pre-wrap\",\n    wordBreak: \"break-all\"\n  };\n\n  // Componente customizado para dropdown multi-seleção com checkboxes e tooltip\n  const MultiSelectDropdown = ({ value, options, onChange, disabled }) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggleDropdown = () => {\n      if (!disabled) {\n        setIsOpen(!isOpen);\n      }\n    };\n\n    const handleCheckboxChange = (e) => {\n      const optionValue = e.target.value;\n      let newValue;\n      if (e.target.checked) {\n        newValue = [...value, optionValue];\n      } else {\n        newValue = value.filter((v) => v !== optionValue);\n      }\n      onChange(newValue);\n    };\n\n    // Exibe os valores selecionados como uma lista separada por vírgula\n    const selectedText = options\n      .filter((option) => value.includes(option.value))\n      .map((option) => option.value)\n      .join(\", \");\n\n    return (\n      <div className=\"multi-select-dropdown\" style={{ position: \"relative\", width: \"200px\" }}>\n        <div\n          onClick={toggleDropdown}\n          style={{\n            border: \"1px solid #ccc\",\n            padding: \"5px\",\n            cursor: disabled ? \"not-allowed\" : \"pointer\",\n            backgroundColor: disabled ? \"#f5f5f5\" : \"white\"\n          }}\n        >\n          {selectedText || \"Selecione...\"}\n        </div>\n        {isOpen && (\n          <div\n            className=\"dropdown-options\"\n            style={{\n              position: \"absolute\",\n              top: \"100%\",\n              left: 0,\n              right: 0,\n              border: \"1px solid #ccc\",\n              backgroundColor: \"white\",\n              zIndex: 1000,\n              maxHeight: \"150px\",\n              overflowY: \"auto\"\n            }}\n          >\n            {options.map((option) => (\n              <label\n                key={option.value}\n                title={option.description} // Exibe a descrição como tooltip ao passar o mouse\n                style={{ display: \"block\", padding: \"5px\", cursor: \"pointer\" }}\n              >\n                <input\n                  type=\"checkbox\"\n                  value={option.value}\n                  checked={value.includes(option.value)}\n                  onChange={handleCheckboxChange}\n                />\n                {\" \"}{option.value}\n              </label>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"dadostable\">\n      <div className=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              {/* Apenas as colunas que devem ser exibidas */}\n              <th>Nome da Embarcação</th>\n              <th>Nº Registo/IMO</th>\n              <th>Data</th>\n              <th>Hora</th>\n              <th>Tipo de Task</th>\n              {/* Botão para alternar modelo de posição */}\n              <th colSpan=\"2\">\n                <button onClick={toggleModel}>\n                  ALTERNAR FORMATO POSIÇÕES, selecionado: {activeLocationFormat}\n                </button>\n                <br />\n                Latitude / Longitude\n              </th>\n              <th>Situação</th>\n              <th>Tipo de Infração</th>\n              <th>Medidas Tomadas</th>\n              <th>OBS</th>\n              <th>Ações</th>\n            </tr>\n          </thead>\n          <tbody>\n            {dadosSelecionados.map((dado, rowIndex) => (\n              <tr key={rowIndex}>\n                {/* Apenas as colunas que devem ser exibidas */}\n                <td>{dado.nomeEmbarcacao}</td>\n                <td>{dado.numRegisto}</td>\n                <td>\n                  <input\n                    type=\"date\"\n                    value={dado.data}\n                    onChange={(e) => updateCellValue(rowIndex, \"data\", e.target.value)}\n                    disabled={dado.disabled}\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"time\"\n                    value={dado.hora}\n                    onChange={(e) => updateCellValue(rowIndex, \"hora\", e.target.value)}\n                    disabled={dado.disabled}\n                  />\n                </td>\n                <td>\n                  {dado.disabled ? (\n                    <span>{dado.tipoDeTask}</span>\n                  ) : (\n                    <select\n                      value={dado.tipoDeTask}\n                      onChange={(e) => updateCellValue(rowIndex, \"tipoDeTask\", e.target.value)}\n                      disabled={dado.disabled}\n                    >\n                      <option value=\"\">Selecione...</option>\n                      <option value=\"Abordado\">Abordado</option>\n                      <option value=\"Avistado\">Avistado</option>\n                      <option value=\"Investigado\">Investigado</option>\n                    </select>\n                  )}\n                </td>\n                {/* Coluna para Latitude */}\n                <td>\n                  {activeLocationFormat === \"GG\" ? (\n                    <LocalizacaoGGLatitude\n                      value={dado.latitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"latitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMM\" ? (\n                    <LocalizacaoGGMMLatitude\n                      value={dado.latitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"latitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMMSS\" ? (\n                    <LocalizacaoGGMMSSLatitude\n                      value={dado.latitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"latitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : (\n                    <input\n                      type=\"text\"\n                      value=\"\"\n                      disabled\n                      placeholder=\"Inativo\"\n                      style={{ width: \"80px\" }}\n                    />\n                  )}\n                </td>\n                {/* Coluna para Longitude */}\n                <td>\n                  {activeLocationFormat === \"GG\" ? (\n                    <LocalizacaoGGLongitude\n                      value={dado.longitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"longitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMM\" ? (\n                    <LocalizacaoGGMMLongitude\n                      value={dado.longitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"longitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : activeLocationFormat === \"GGMMSS\" ? (\n                    <LocalizacaoGGMMSSLongitude\n                      value={dado.longitude || \"\"}\n                      onChange={(e) => updateCellValue(rowIndex, \"longitude\", e.target.value)}\n                      disabled={dado.disabled}\n                    />\n                  ) : (\n                    <input\n                      type=\"text\"\n                      value=\"\"\n                      disabled\n                      placeholder=\"Inativo\"\n                      style={{ width: \"80px\" }}\n                    />\n                  )}\n                </td>\n                {/* Dropdown para Situação */}\n                <td>\n                  {dado.disabled ? (\n                    <span>{dado.situacao}</span>\n                  ) : (\n                    <select\n                      value={dado.situacao}\n                      onChange={(e) => updateCellValue(rowIndex, \"situacao\", e.target.value)}\n                      disabled={dado.disabled}\n                    >\n                      <option value=\"\">Selecione...</option>\n                      <option value=\"Irregular\">Irregular</option>\n                      <option value=\"Ilegal\">Ilegal</option>\n                      <option value=\"Legal\">Legal</option>\n                    </select>\n                  )}\n                </td>\n                {/* Coluna para Tipo de Infração */}\n                <td>\n                  {dado.disabled ? (\n                    <span>\n                      {Array.isArray(dado.tipoInfracao)\n                        ? dado.tipoInfracao.join(\", \")\n                        : dado.tipoInfracao}\n                    </span>\n                  ) : (\n                    <MultiSelectDropdown\n                      value={Array.isArray(dado.tipoInfracao) ? dado.tipoInfracao : []}\n                      options={tipoInfracaoOptions}\n                      onChange={(selectedValues) =>\n                        updateCellValue(rowIndex, \"tipoInfracao\", selectedValues)\n                      }\n                      disabled={dado.disabled}\n                    />\n                  )}\n                </td>\n                {/* Coluna para Medidas Tomadas */}\n                <td>\n                  <textarea\n                    value={dado.medidasTomadas}\n                    onChange={(e) => updateCellValue(rowIndex, \"medidasTomadas\", e.target.value)}\n                    disabled={dado.disabled}\n                    style={textAreaStyle}\n                    rows={3}\n                  />\n                </td>\n                {/* Coluna para OBS */}\n                <td>\n                  <textarea\n                    value={dado.observacoes}\n                    onChange={(e) => updateCellValue(rowIndex, \"observacoes\", e.target.value)}\n                    disabled={dado.disabled}\n                    style={textAreaStyle}\n                    rows={3}\n                  />\n                </td>\n                {/* Coluna para Ações */}\n                <td>\n                  <button onClick={() => updateRowDisabled(rowIndex, !dado.disabled)}>\n                    {dado.disabled ? \"Editar\" : \"Pronto\"}\n                  </button>\n                  <button onClick={() => removerLinha(rowIndex)}>Excluir</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default DadosTable;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport OperacaoTable from \"./components/OperacaoTable\";\nimport NaviosTable from \"./components/NaviosTable\";\nimport DadosTable from \"./components/DadosTable\";\nimport \"./App.css\";\nimport Papa from \"papaparse\";\nimport * as XLSX from \"xlsx\"; // Para exportação\n\nconst GOOGLE_SHEET_URL =\n  \"https://docs.google.com/spreadsheets/d/e/2PACX-1vR6IEKVLswVSPSlD5qKBtbTqwj7ciZOhr40a84inuVTeeXIyC8KueX8IaVW2tILpaVxp5p2OsoxBi6g/pub?output=csv\";\nconst GOOGLE_SHEET_CONFIG_URL =\n  \"https://docs.google.com/spreadsheets/d/e/2PACX-1vQmY3QHsDgxr-YD_5pvQla3QqEv54ek8sqB1HolsYgfOaFpTT7huZI-E7EVtt_TV0hD0Jq52j46y4vn/pub?gid=481503026&single=true&output=csv\";\n\nfunction App() {\n  // Estados com persistência via localStorage\n  const [dadosOperacao, setDadosOperacao] = useState(() => {\n    const saved = localStorage.getItem(\"dadosOperacao\");\n    return saved ? JSON.parse(saved) : [\"\", \"\", \"\", \"\", \"\"];\n  });\n  const [dadosSelecionados, setDadosSelecionados] = useState(() => {\n    const saved = localStorage.getItem(\"dadosSelecionados\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [dadosNavios, setDadosNavios] = useState([]);\n  const [filtros, setFiltros] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [config, setConfig] = useState({\n    nacionalidadeEntidade: [],\n    operacoes: [],\n    entidades: [],\n    tiposEntidade: [],\n    situacoes: [],\n    tiposEmbarcacao: [],\n    // novo campo para infrações (colunas M e N)\n    tipoInfracaoOptions: [],\n  });\n  const [activeLocationFormat, setActiveLocationFormat] = useState(() => {\n    return localStorage.getItem(\"activeLocationFormat\") || \"GG\";\n  });\n\n  // Estado para exibir o modal da Lista de Infrações\n  const [showInfractionsModal, setShowInfractionsModal] = useState(false);\n\n  useEffect(() => {\n      // inside useEffect...\n    async function fetchConfig() {\n      try {\n        const response = await axios.get(GOOGLE_SHEET_CONFIG_URL);\n        const parsed = Papa.parse(response.data, { header: false });\n        const linhas = parsed.data;\n        const dados = linhas.slice(1); // remove header\n        setConfig({\n          nacionalidadeEntidade: dados.map((row) => row[0]).filter(Boolean),\n          operacoes: dados.map((row) => row[2]).filter(Boolean),\n          entidades: dados.map((row) => row[4]).filter(Boolean),\n          tiposEntidade: dados.map((row) => row[6]).filter(Boolean),\n          situacoes: dados.map((row) => row[8]).filter(Boolean),\n          tiposEmbarcacao: dados.map((row) => row[10]).filter(Boolean),\n          tipoInfracaoOptions: dados\n            .map((row) => {\n              if (row[12] && row[13]) {\n                return { value: row[12], description: row[13] };\n              }\n              return null;\n            })\n            .filter((item) => item !== null),\n        });\n      } catch (error) {\n        console.error(\"Erro ao buscar configuração:\", error);\n        setError(\"Falha ao carregar configurações.\");\n      }\n    }\n    \n\n    async function fetchNavios() {\n      try {\n        const response = await axios.get(GOOGLE_SHEET_URL);\n        const linhasNavios = response.data.split(\"\\n\").map((linha) => linha.split(\",\"));\n        setDadosNavios(linhasNavios);\n      } catch (error) {\n        console.error(\"Erro ao buscar dados dos navios:\", error);\n        setError(\"Falha ao carregar dados dos navios.\");\n      }\n    }\n    Promise.all([fetchConfig(), fetchNavios()]).then(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"dadosOperacao\", JSON.stringify(dadosOperacao));\n  }, [dadosOperacao]);\n  useEffect(() => {\n    localStorage.setItem(\"dadosSelecionados\", JSON.stringify(dadosSelecionados));\n  }, [dadosSelecionados]);\n  useEffect(() => {\n    localStorage.setItem(\"activeLocationFormat\", activeLocationFormat);\n  }, [activeLocationFormat]);\n\n  const handleFiltroChange = (e, colunaIndex) => {\n    const valor = e.target.value;\n    setFiltros((prev) => ({ ...prev, [colunaIndex]: valor }));\n  };\n\n  const dadosFiltrados = dadosNavios.filter((linha, i) => {\n    if (i === 0) return true; // Cabeçalho permanece\n    return linha.every((celula, j) => {\n      const filtro = filtros[j];\n      if (!filtro) return true;\n      const valorCelula = celula ? String(celula).toLowerCase() : \"\";\n      return valorCelula.includes(filtro.toLowerCase());\n    });\n  });\n\n  const adicionarAoDadostable = (linha) => {\n    if (\n      linha[0] &&\n      linha[0].trim().toLowerCase() === \"nome da embarcação\".toLowerCase()\n    ) {\n      return;\n    }\n    setDadosSelecionados((prev) => [\n      ...prev,\n      {\n        nomeEmbarcacao: linha[0],\n        tipoDeTask: \"\",\n        numRegisto: linha[1],\n        numMatricula: linha[2],\n        tipoEmbarcacao: linha[3],\n        nacionalidade: linha[4],\n        nomeMestre: linha[5],\n        ilha: linha[6],\n        licenca: linha[7],\n        // Inicialmente, os campos de localização ficam vazios.\n        localizacaoGG: \"\",\n        localizacaoGGMM: \"\",\n        localizacaoGGMMSS: \"\",\n        // Utilizamos os campos latitude e longitude para a entrada do usuário.\n        latitude: \"\",\n        longitude: \"\",\n        situacao: \"\",\n        tipoInfracao: [], // Para multi-seleção\n        medidasTomadas: \"\",\n        observacoes: \"\",\n        disabled: false,\n        data: new Date().toISOString().substring(0, 10),\n        hora: new Date().toLocaleTimeString(\"pt-PT\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false,\n        }),\n      },\n    ]);\n  };\n\n  const handleCellEdit = (e, rowIndex, cellKey) => {\n    const novoValor = e.target.innerText;\n    setDadosSelecionados((prev) => {\n      const novosDados = [...prev];\n      novosDados[rowIndex][cellKey] = novoValor;\n      return novosDados;\n    });\n  };\n\n  const updateCellValue = (rowIndex, field, value) => {\n    setDadosSelecionados((prev) => {\n      const novosDados = [...prev];\n      novosDados[rowIndex][field] = value;\n      return novosDados;\n    });\n  };\n\n  const updateRowDisabled = (rowIndex, status) => {\n    setDadosSelecionados((prev) => {\n      const novosDados = [...prev];\n      novosDados[rowIndex].disabled = status;\n      return novosDados;\n    });\n  };\n\n  const removerLinha = (rowIndex) => {\n    setDadosSelecionados((prev) =>\n      prev.filter((_, index) => index !== rowIndex)\n    );\n  };\n\n  const resetarDados = () => {\n    if (\n      window.confirm(\"Tem certeza que deseja resetar os dados e começar do zero?\")\n    ) {\n      localStorage.clear();\n      window.location.reload();\n    }\n  };\n\n  // Função de conversão para localização (mantida do seu código)\n  const detectFormat = (value) => {\n    if (!value) return null;\n    const trimmed = value.trim().replace(\",\", \".\"); // Substituir \",\" por \".\"\n    const parts = trimmed.split(\" \");\n    if (parts.length < 2) return null;\n    const numericPart = parts.slice(0, parts.length - 1).join(\" \");\n    const numericParts = numericPart.split(\" \");\n    if (numericParts.length === 1 && numericParts[0].includes(\".\")) {\n      return \"GG\";\n    } else if (numericParts.length === 2 && numericParts[1].includes(\".\")) {\n      return \"GGMM\";\n    } else if (numericParts.length === 3) {\n      return \"GGMMSS\";\n    }\n    return null;\n  };\n\n  const convertLocation = (value, isLatitude) => {\n    if (!value) return \"\";\n    const format = detectFormat(value);\n    if (!format) return value;\n    const trimmed = value.trim().replace(\",\", \".\");\n    const parts = trimmed.split(\" \");\n    const hemis = parts.pop().toUpperCase();\n    const numericPart = parts.join(\" \");\n    let degrees = 0, minutes = 0, seconds = 0;\n    if (format === \"GG\") {\n      degrees = parseFloat(numericPart);\n      minutes = (degrees % 1) * 60;\n      degrees = Math.floor(degrees);\n    } else if (format === \"GGMM\") {\n      const [deg, min] = numericPart.split(\" \");\n      degrees = parseInt(deg, 10);\n      minutes = parseFloat(min);\n    } else if (format === \"GGMMSS\") {\n      const [deg, min, sec] = numericPart.split(\" \");\n      degrees = parseInt(deg, 10);\n      minutes = parseInt(min, 10);\n      seconds = parseFloat(sec);\n    }\n    let minutesDecimal = (minutes + seconds / 60).toFixed(2);\n    let result = `${degrees}${minutesDecimal.replace(\".\", \",\")}`;\n    if ((isLatitude && hemis === \"S\") || (!isLatitude && hemis === \"W\")) {\n      result = \"-\" + result;\n    }\n    return result;\n  };\n\n  const enviarDados = () => {\n    if (dadosOperacao.every((field) => field.trim() === \"\")) {\n      alert(\"Por favor, altere os dados de operação antes de enviar.\");\n      return;\n    }\n    const notReadyRows = dadosSelecionados.filter((row) => !row.disabled);\n    if (notReadyRows.length > 0) {\n      alert(\"Todas as linhas devem estar no estado 'Pronto' antes de enviar.\");\n      return;\n    }\n    const operacaoData = {\n      operacao: dadosOperacao[0] || \"\",\n      entidade: dadosOperacao[1] || \"\",\n      tipoOperacao: dadosOperacao[2] || \"\",\n      nacionalidadeOperacao: dadosOperacao[3] || \"\",\n      outrasAgencias: dadosOperacao[4] || \"\",\n    };\n    // Cabeçalhos para o Excel – Note que mesmo os campos removidos na tabela (display) são exportados.\n    const headers = [\n      \"Operação\",\n      \"Entidade\",\n      \"Tipo\",\n      \"Nacionalidade\",\n      \"Nome da Embarcação\",\n      \"Nº Registo/IMO\",\n      \"Nº Matrícula/MMSI\",\n      \"Tipo de Embarcacao\",\n      \"Nacionalidade\",\n      \"Nome do Mestre\",\n      \"Ilha\",\n      \"Licença\",\n      \"Data\",\n      \"Hora\",\n      \"Tipo de Task\",\n      \"Latitude\",\n      \"Longitude\",\n      \"Situação\",\n      \"Tipo de Infração\",\n      \"Medidas Tomadas\",\n      \"Outras Agências\",\n      \"OBS\",\n    ];\n    const combinedData = dadosSelecionados.map((row) => {\n      const lat = convertLocation(row.latitude, true);\n      const lon = convertLocation(row.longitude, false);\n      return [\n        operacaoData.operacao,\n        operacaoData.entidade,\n        operacaoData.tipoOperacao,\n        operacaoData.nacionalidadeOperacao,\n        row.nomeEmbarcacao,\n        row.numRegisto,\n        row.numMatricula,\n        row.tipoEmbarcacao,\n        row.nacionalidade,\n        row.nomeMestre,\n        row.ilha,\n        row.licenca,\n        row.data,\n        row.hora,\n        row.tipoDeTask,\n        lat,\n        lon,\n        row.situacao,\n        Array.isArray(row.tipoInfracao) ? row.tipoInfracao.join(\", \") : row.tipoInfracao,\n        row.medidasTomadas,\n        operacaoData.outrasAgencias,\n        row.observacoes,\n      ];\n    });\n    const worksheet = XLSX.utils.aoa_to_sheet([headers, ...combinedData]);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Dados\");\n    XLSX.writeFile(workbook, \"dados_exportados.xlsx\");\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>FORMULÁRIO PARA NAVIOS ABORDADOS/AVISTADOS/INVESTIGADOS</h1>\n      {loading ? (\n        <p>Carregando...</p>\n      ) : error ? (\n        <p className=\"error\">{error}</p>\n      ) : null}\n\n      <OperacaoTable\n        dadosOperacao={dadosOperacao}\n        config={[\n          config.operacoes,\n          config.entidades,\n          config.tiposEntidade,\n          config.nacionalidadeEntidade,\n        ]}\n        handleOperacaoChange={(e, index) => {\n          const novoValor = e.target.value;\n          setDadosOperacao((prev) => {\n            const novosDados = [...prev];\n            novosDados[index] = novoValor;\n            return novosDados;\n          });\n        }}\n      />\n\n      <NaviosTable\n        dadosFiltrados={dadosFiltrados}\n        adicionarAoDadostable={adicionarAoDadostable}\n        handleFiltroChange={handleFiltroChange}\n      />\n\n      <DadosTable\n        dadosSelecionados={dadosSelecionados}\n        handleCellEdit={handleCellEdit}\n        updateCellValue={updateCellValue}\n        updateRowDisabled={updateRowDisabled}\n        removerLinha={removerLinha}\n        activeLocationFormat={activeLocationFormat}\n        setActiveLocationFormat={setActiveLocationFormat}\n        setDadosSelecionados={setDadosSelecionados}\n        tipoInfracaoOptions={config.tipoInfracaoOptions}\n      />\n\n      <button\n        onClick={enviarDados}\n        style={{ marginTop: \"20px\", padding: \"10px 20px\" }}\n      >\n        Enviar/Download de dados\n      </button>\n      <button\n        onClick={resetarDados}\n        style={{\n          marginTop: \"20px\",\n          padding: \"10px 20px\",\n          backgroundColor: \"#dc3545\",\n          color: \"white\",\n        }}\n      >\n        Resetar Dados\n      </button>\n\n      {/* Botão para exibir a Lista de Infrações */}\n      <button\n        onClick={() => setShowInfractionsModal(true)}\n        style={{ marginTop: \"20px\", padding: \"10px 20px\" }}\n      >\n        Ver Lista de Infrações\n      </button>\n\n      {/* Modal para exibir a Lista de Infrações */}\n      {showInfractionsModal && (\n  <div\n    style={{\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(0,0,0,0.5)\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      zIndex: 1000,\n    }}\n  >\n    <div\n      style={{\n        backgroundColor: \"#fff\",\n        padding: \"20px\",\n        borderRadius: \"4px\",\n        width: \"90%\",\n        maxWidth: \"800px\",         // Increased max width for more space\n        maxHeight: \"90vh\",         // 90% of viewport height\n        overflowY: \"auto\",\n        textAlign: \"left\",\n        whiteSpace: \"pre-wrap\",    // Preserves newlines and wraps text\n        wordBreak: \"break-word\",   // Breaks long words if needed\n      }}\n    >\n      <h2>Lista de Infrações</h2>\n      <ul style={{ paddingLeft: \"20px\", margin: 0 }}>\n        {config.tipoInfracaoOptions.map((item, index) => (\n          <li\n            key={index}\n            style={{\n              marginBottom: \"10px\",\n              whiteSpace: \"pre-wrap\", // Ensures each list item wraps correctly\n            }}\n          >\n            <strong>{item.value}</strong>: {item.description}\n          </li>\n        ))}\n      </ul>\n      <button onClick={() => setShowInfractionsModal(false)}>Fechar</button>\n    </div>\n  </div>\n)}\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}